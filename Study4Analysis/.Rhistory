sdWHN = sd(trialResp.corr))
ClipConfSummary <- WHNDataset %>%
subset(Block == "Baseline") %>%
group_by(image_file) %>%
summarise(n = n(),
WHNCorr = sum(trialResp.corr),
WHNIncorr = n() - sum(trialResp.corr),
RatioCorr = WHNCorr / n() * 100,
conf = mean(conf_slider.response),
sdWHN = sd(trialResp.corr))
ggplot(data = ClipSummary, aes(x = image_file, y = WHN, fill = image_file))+
geom_col()+
theme(axis.text.x = element_text(angle = 90))+
labs(xlim(0,NoPpts))+
geom_hline(yintercept = NoPpts)+
geom_hline(yintercept = NoPpts / 4)
ggplot(data = WHNDataset, aes(x = image_file, y = conf_slider.response, fill = image_file))+
geom_boxplot()+
theme(axis.text.x = element_text(angle = 90))+
labs(xlim(0,1))
ggplot(data = ClipBlockSummary, aes(x = image_file, y = WHNCorr, fill = Block))+
geom_col()+
theme(axis.text.x = element_text(angle = 90))+
labs(xlim(0,NoPpts))+
geom_hline(yintercept = NoPpts, colour = 'blue')+
geom_hline(yintercept = NoPpts / 4, colour = 'red', linetype = 'dashed')
AttSum <- WHNDataset %>%
group_by(Block) %>%
summarise(n = NoPpts,
mean = mean(Attention_slider.response, na.rm = T),
sd = sd(Attention_slider.response, na.rm = T))
WHNBaseline <- as.numeric(WHNSummary[1,3])
ggplot(data = WHNSummary, aes(x = Block, y = WHN, fill = Block))+
geom_col()+
geom_errorbar(aes(ymin = WHN - sdWHN, ymax = WHN + sdWHN),
width = 0.2,
position = position_dodge(0.9))+
geom_hline(yintercept = WHNBaseline, linetype = "dashed", size = 0.5)+
#geom_hline(yintercept = 8, linetype = "solid", size = 1.0)+
#geom_hline(yintercept = 2, linetype = "dotted", size = 1.0)+
labs(title = "Average Hazard Prediction Score", x = "NDRT Presentation Condition", y = "Average number of correct responses")+
ylim(0,8)+
scale_fill_hue(l = 40)
ggplot(data = WHNDataset, aes(x = Block, y = trialResp.corr, fill = Block))+
stat_summary()
PlotData <- WHNDataset %>%
select(participant, trialResp.corr, trials_3.thisTrialN, Block) %>%   group_by(participant, Block) %>%
summarise(participant = participant,
score = sum(trialResp.corr),
Block = Block)
PlotData <- PlotData[!duplicated(PlotData),]
WHNPlot2 <- ggplot(data = PlotData, aes(x = Block, y = score, fill = Block))+
geom_violin(alpha = 0.8)+
geom_boxplot(alpha = 0, width = 0.2)+
scale_fill_manual(values = friendly_pal("ito_seven"))+
theme_classic()+
theme(legend.position="none") +theme(text=element_text(size = 20)) +
theme(axis.text=element_text(size=15))+
labs(title = "Hazard Prediction Score", x = "NDRT Presentation Condition", y = "Average correct responses")+
theme(plot.title=element_text(vjust=11.5))+
theme(plot.margin =unit(c(2,0,0,0),"cm"))
library(ggpubfigs)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(splitstackshape)
library(stringr)
library(data.table)
library(dplyr)
library(tidyr)
library(gridExtra)
library(lme4)
library(lmerTest)
library(afex)
library(effects)
library(ggplot2)
library(ggthemes)
library(report)
library(janitor)
library(ggpubfigs)
dataFolder = "C:/Users/thoma/OneDrive - University of Glasgow/Desktop/Study 4/data/WHN/"
file_list <- list.files(path = dataFolder, pattern = "..csv$", all.files = TRUE, full.names = TRUE, recursive = TRUE)
RawWHNDataset <- data.frame()
#loop through all the fills, create a temporary container, remove the first, second and last rows and then add 1 to the trials counter. Then bind it to the dataset
for (file in file_list){
tempData <- read.csv(file, header = T)
RawWHNDataset <- bind_rows(RawWHNDataset, tempData)
}
SortedWHNDataset <- RawWHNDataset %>%
select(participant,image_file,Correct,trials_3.thisTrialN, conf_slider.response, conf_slider.rt, MiseryScale.response, Attention_slider.response, trialResp.keys, trialResp.corr, trialResp.rt)
SortedWHNDataset$Attention_slider.response <- as.numeric(SortedWHNDataset$Attention_slider.response)
SortedWHNDataset <- SortedWHNDataset %>%
#subset(image_file != "Slide24") %>%
subset(participant != "P01") %>%
subset(participant != "P02") %>%
subset(participant != "P03") %>%
subset(participant != "P04") %>%
subset(participant != "P05") %>%
subset(participant != "P06") %>%
subset(participant != "P13") %>%
subset(participant != "P21")
Counterbalancing <- read.csv("C:/Users/thoma/OneDrive - University of Glasgow/Desktop/Study 4/Study4Counterbalancing.csv", header = T)
Counterbalancing <- Counterbalancing %>%  select(participant, First,Second,Third,Fourth)
Counterbalancing <- na.omit(Counterbalancing)
OrderWHNDataset <- left_join(SortedWHNDataset, Counterbalancing, by = 'participant')
OrderWHNDataset$Block <- 'Baseline'
OrderWHNDataset$Block <-  if_else(OrderWHNDataset$trials_3.thisTrialN >= 30,OrderWHNDataset$Fourth,
if_else(OrderWHNDataset$trials_3.thisTrialN >= 20,OrderWHNDataset$Third,
if_else(OrderWHNDataset$trials_3.thisTrialN >= 10,OrderWHNDataset$Second,
OrderWHNDataset$First)))
WHNDataset <- OrderWHNDataset
WHNDataset <- WHNDataset[!is.na(WHNDataset$Correct),]
#WHNDataset <- left_join(WHNDataset, DemogDataOrg, by = "participant")
WHNDataset$participant <- as.factor(WHNDataset$participant)
WHNDataset$image_file[WHNDataset$image_file == "Slide1"] <- "Slide01"
WHNDataset$image_file[WHNDataset$image_file == "Slide2"] <- "Slide02"
WHNDataset$image_file[WHNDataset$image_file == "Slide3"] <- "Slide03"
WHNDataset$image_file[WHNDataset$image_file == "Slide4"] <- "Slide04"
WHNDataset$image_file[WHNDataset$image_file == "Slide5"] <- "Slide05"
WHNDataset$image_file[WHNDataset$image_file == "Slide6"] <- "Slide06"
WHNDataset$image_file[WHNDataset$image_file == "Slide7"] <- "Slide07"
WHNDataset$image_file[WHNDataset$image_file == "Slide8"] <- "Slide08"
WHNDataset$image_file[WHNDataset$image_file == "Slide9"] <- "Slide09"
WHNDataset$Block <- factor(WHNDataset$Block, levels = c("Control", "HUD",  "Cue", "HDD"))
# WHNDataset$UKLicense[WHNDataset$UKLicense == "I have a license from another country"] <- "No"
# WHNDataset$UKLicense <- as.factor(WHNDataset$UKLicense)
WHNCuedDataset <- WHNDataset# %>%
# subset(Block != "Baseline")
WHNCuedDataset$Block <- factor(WHNCuedDataset$Block, levels = c("Cue","Control", "HUD", "HDD"))
WHNHUDDataset <- WHNDataset# %>%
# subset(Block != "Baseline")
WHNHUDDataset$Block <- factor(WHNHUDDataset$Block, levels = c("HUD","Control", "Cue", "HDD"))
WHNHDDDataset <- WHNDataset# %>%
# subset(Block != "Baseline")
WHNHDDDataset$Block <- factor(WHNHUDDataset$Block, levels = c("HDD", "HUD","Control", "Cue"))
NoPpts <- n_distinct(WHNDataset$participant)
WHNSummary <- WHNDataset %>%
group_by(Block) %>%
summarise(n = (n()/NoPpts),
WHN = sum(trialResp.corr / NoPpts ) ,
WHNPercent = sum((trialResp.corr / NoPpts) /10) * 100,
sdWHN = sd(trialResp.corr),
seWHN = (sd(trialResp.corr))/ sqrt(NoPpts),
meanConf = mean(conf_slider.response),
sdConf = sd(conf_slider.response),
seConf = (sd(conf_slider.response))/ sqrt(NoPpts),
meanMISC = mean(MiseryScale.response),
sdMISC = sd(MiseryScale.response),
seMISC = (sd(MiseryScale.response))/ sqrt(NoPpts),
meanAttention = mean(Attention_slider.response, na.rm = T),
sdAttention = sd(Attention_slider.response, na.rm=T),
seAttention = (sd(Attention_slider.response, na.rm=T))/ sqrt(NoPpts),
trialRespmean = mean(trialResp.rt, na.rm=T),
trialRespSD = sd(trialResp.rt, na.rm=T)
)
ClipSummary <- WHNDataset %>%
group_by(image_file) %>%
summarise(n = n(),
WHN = sum(trialResp.corr),
sdWHN = sd(trialResp.corr))
ClipBlockSummary <- WHNDataset %>%
group_by(image_file, Block) %>%
summarise(n = n(),
WHNCorr = sum(trialResp.corr),
WHNIncorr = n() - sum(trialResp.corr),
RatioCorr = WHNCorr / n() * 100,
sdWHN = sd(trialResp.corr))
ClipConfSummary <- WHNDataset %>%
subset(Block == "Baseline") %>%
group_by(image_file) %>%
summarise(n = n(),
WHNCorr = sum(trialResp.corr),
WHNIncorr = n() - sum(trialResp.corr),
RatioCorr = WHNCorr / n() * 100,
conf = mean(conf_slider.response),
sdWHN = sd(trialResp.corr))
ggplot(data = ClipSummary, aes(x = image_file, y = WHN, fill = image_file))+
geom_col()+
theme(axis.text.x = element_text(angle = 90))+
labs(xlim(0,NoPpts))+
geom_hline(yintercept = NoPpts)+
geom_hline(yintercept = NoPpts / 4)
ggplot(data = WHNDataset, aes(x = image_file, y = conf_slider.response, fill = image_file))+
geom_boxplot()+
theme(axis.text.x = element_text(angle = 90))+
labs(xlim(0,1))
ggplot(data = ClipBlockSummary, aes(x = image_file, y = WHNCorr, fill = Block))+
geom_col()+
theme(axis.text.x = element_text(angle = 90))+
labs(xlim(0,NoPpts))+
geom_hline(yintercept = NoPpts, colour = 'blue')+
geom_hline(yintercept = NoPpts / 4, colour = 'red', linetype = 'dashed')
AttSum <- WHNDataset %>%
group_by(Block) %>%
summarise(n = NoPpts,
mean = mean(Attention_slider.response, na.rm = T),
sd = sd(Attention_slider.response, na.rm = T))
WHNBaseline <- as.numeric(WHNSummary[1,3])
ggplot(data = WHNSummary, aes(x = Block, y = WHN, fill = Block))+
geom_col()+
geom_errorbar(aes(ymin = WHN - sdWHN, ymax = WHN + sdWHN),
width = 0.2,
position = position_dodge(0.9))+
geom_hline(yintercept = WHNBaseline, linetype = "dashed", size = 0.5)+
#geom_hline(yintercept = 8, linetype = "solid", size = 1.0)+
#geom_hline(yintercept = 2, linetype = "dotted", size = 1.0)+
labs(title = "Average Hazard Prediction Score", x = "NDRT Presentation Condition", y = "Average number of correct responses")+
ylim(0,8)+
scale_fill_hue(l = 40)
ggplot(data = WHNDataset, aes(x = Block, y = trialResp.corr, fill = Block))+
stat_summary()
PlotData <- WHNDataset %>%
select(participant, trialResp.corr, trials_3.thisTrialN, Block) %>%   group_by(participant, Block) %>%
summarise(participant = participant,
score = sum(trialResp.corr),
Block = Block)
PlotData <- PlotData[!duplicated(PlotData),]
WHNPlot2 <- ggplot(data = PlotData, aes(x = Block, y = score, fill = Block))+
geom_violin(alpha = 0.8)+
geom_boxplot(alpha = 0, width = 0.2)+
scale_fill_manual(values = friendly_pal("ito_seven"))+
theme_classic()+
theme(legend.position="none") +theme(text=element_text(size = 20)) +
theme(axis.text=element_text(size=15))+
labs(title = "Hazard Prediction Score", x = "NDRT Presentation Condition", y = "Average correct responses")+
theme(plot.title=element_text(vjust=11.5))+
theme(plot.margin =unit(c(2,0,0,0),"cm"))
WHNPlot2
WHNAOV <- glm(family = binomial, data = WHNDataset, formula = trialResp.corr ~ Block)
summary(WHNAOV)
ConfBaseline <- as.numeric(WHNSummary[1,7])
ggplot(data = WHNSummary, aes(x = Block, y = meanConf, fill = Block))+
geom_col()+
geom_errorbar(aes(ymin = meanConf - sdConf/2, ymax = meanConf + sdConf/2),
width = 0.2,
position = position_dodge(0.9))+
geom_hline(yintercept = ConfBaseline, linetype = "dashed", size = 1.0)+
labs(title = "Average Confidence Score", y = "Mean Confidence Rating", x = "NDRT Presentation Condition")+
ylim(0,1.0)+
scale_fill_hue(l = 40)
ConfBaseline <- as.numeric(WHNSummary[1,7])
ConfPlot2 <- ggplot(data = WHNDataset, aes(x = Block, y = conf_slider.response, fill = Block))+
geom_violin(alpha = 0.8) + geom_boxplot(alpha=0.2, width = 0.2)+
labs(title = "Average Confidence Score", y = "Mean Confidence Rating", x = "", key= FALSE)+
ylim(0,1.0)+
scale_fill_manual(values = friendly_pal("ito_seven"))+
theme_classic()+
theme(legend.position="none")+
theme(text=element_text(size = 15)) +
theme(axis.text=element_text(size=10))+
theme(plot.title=element_text(vjust=14))+
theme(plot.margin =unit(c(2,0,0,0),"cm"))
ConfPlot2
MISCDataset <- WHNDataset %>%
group_by(trials_3.thisTrialN, Block) %>%
summarise(mean = mean(MiseryScale.response),
sd = sd(MiseryScale.response))
ggplot(data = MISCDataset, aes(x = trials_3.thisTrialN, y = mean))+
geom_line(aes(colour  = factor(Block)))+
geom_point(aes(colour = Block))+
geom_ribbon(aes(ymin =MISCDataset$mean - MISCDataset$sd, ymax = MISCDataset$mean + MISCDataset$sd, fill = Block),alpha= 0.0) +
labs(title = "MISC Score")
MISCARDataset <- MISCDataset %>%
subset(Block != "Cue") %>%
subset(Block != "HDD") %>%
subset(Block != "Control")
MISCCueDataset <- MISCDataset %>%
subset(Block != "HUD") %>%
subset(Block != "HDD") %>%
subset(Block != "Control")
MISCHDDDataset <- MISCDataset %>%
subset(Block != "HUD") %>%
subset(Block != "Cue") %>%
subset(Block != "Control")
ggplot(data = MISCARDataset, aes(x = trials_3.thisTrialN, y = mean))+
geom_line(aes(colour  = factor(Block)))+
geom_point(aes(colour = Block))+
geom_ribbon(aes(ymin =MISCARDataset$mean - MISCARDataset$sd, ymax = MISCARDataset$mean + MISCARDataset$sd, fill = Block),alpha= 0.2) +
geom_vline(xintercept = 10)+
geom_vline(xintercept = 20)+
geom_vline(xintercept = 30)+
labs(title = "MISC Score - AR HUD")+
scale_x_continuous(breaks = seq(0, 40, 10))
ggplot(data = MISCCueDataset, aes(x = trials_3.thisTrialN, y = mean))+
geom_line(aes(colour  = factor(Block)))+
geom_point(aes(colour = Block))+
geom_ribbon(aes(ymin =MISCCueDataset$mean - MISCCueDataset$sd, ymax = MISCCueDataset$mean + MISCCueDataset$sd, fill = Block),alpha= 0.2) +
geom_vline(xintercept = 10)+
geom_vline(xintercept = 20)+
geom_vline(xintercept = 30)+
labs(title = "MISC Score - Cued AR HUD")+
scale_x_continuous(breaks = seq(0, 40, 10))
ggplot(data = MISCHDDDataset, aes(x = trials_3.thisTrialN, y = mean))+
geom_line(aes(colour  = factor(Block)))+
geom_point(aes(colour = Block))+
geom_ribbon(aes(ymin =MISCHDDDataset$mean - MISCHDDDataset$sd, ymax = MISCHDDDataset$mean + MISCHDDDataset$sd, fill = Block),alpha= 0.2) +
geom_vline(xintercept = 10)+
geom_vline(xintercept = 20)+
geom_vline(xintercept = 30)+
labs(title = "MISC Score - HDD ")+
scale_x_continuous(breaks = seq(0, 40, 10))
AttBaseline <- as.double(AttSum[1,3])
ggplot(data = AttSum, aes(x = Block, y = mean, fill = Block))+
geom_col()+
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd),
width = 0.2,
position = position_dodge(0.9))+
labs(title = "Subjective Attention Rating", y = "Mean Attention Rating", x = "NDRT Presentation Condition")+
geom_hline(yintercept = AttBaseline, linetype = "dashed", size = 1.0)+
scale_fill_hue(l = 40)
AttBaseline <- as.double(AttSum[1,3])
AttPlot2 <- ggplot(data = WHNDataset, aes(x = Block, y = Attention_slider.response, fill = Block))+
geom_violin(alpha = 0.8)+geom_boxplot(alpha = 0.2, width = 0.2)+
labs(title = "Subjective Attention Rating", y = "Mean Attention Rating", x = "NDRT Presentation Condition")+
scale_fill_manual(values = friendly_pal("ito_seven"))+
theme_classic()+
theme(legend.position="none")+
theme(text=element_text(size = 15))+
theme(plot.title=element_text(vjust=14))+
theme(axis.text=element_text(size=10))+
theme(plot.margin =unit(c(2,0,0,0),"cm"))
AttPlot2
library(cowplot)
subPlot<- plot_grid(ConfPlot2, AttPlot2, labels = c('b)','c)'),ncol = 1)
subPlot
legend_b <- get_legend(
WHNPlot2 +
guides(color = guide_legend(nrow = 1)) +
theme(legend.position = "bottom")
)
FullPlot <- plot_grid(WHNPlot2, subPlot, labels = ('a)'))
FinalPlot <- plot_grid(FullPlot, legend_b, ncol = 1, rel_heights = c(1, .1))
FinalPlot
file1 <- tempfile("file1", fileext = ".png")
width = 1920
ggsave(filename = "FullPlot2.png",
plot = FinalPlot,
scale = 3,
device = png,
width = 3840,
units = "px",
dpi = 700)
WHNResults <- report(WHNModel2, CI = (95))
WHNNullModel0 <- glmer(data = WHNDataset, formula = trialResp.corr ~ 1 + (1|participant) + (1|image_file) , family = binomial, glmerControl( optimizer = "bobyqa"))
WHNModel <- glmer(data = WHNDataset, formula = trialResp.corr ~  Block  + (1|image_file) , family = binomial, glmerControl( optimizer = "bobyqa"))
WHNModelBasic <- glmer(data = WHNDataset, formula = trialResp.corr ~  Block + (1 |participant) + (1|image_file) , family = binomial, glmerControl( optimizer = "bobyqa"))
WHNModel1 <- glmer(data = WHNDataset, formula = trialResp.corr ~  Block + (1 + Block|participant)  , family = binomial, glmerControl( optimizer = "bobyqa"))
WHNModel2 <- glmer(data = WHNDataset, formula = trialResp.corr ~  Block + (1 + Block|participant) + (1|image_file) , family = binomial, glmerControl( optimizer = "bobyqa"))
WHNModel3 <- glmer(data = WHNDataset, formula = trialResp.corr ~  Block + (1 + Block|participant) + (1 + Block|image_file) , family = binomial, glmerControl( optimizer = "bobyqa"))
#summary(WHNModel1)
summary(WHNModel2)
WHNResults <- report(WHNModel2, CI = (95))
anova(WHNModel, WHNModelBasic, WHNModel1, WHNModel2, WHNModel3)
anova(WHNModel, WHNModel2)
anova(WHNModel, WHNModelBasic, WHNModel1, WHNModel2, WHNModel3)
anova(WHNModelBasic, WHNModel2)
summary(WHNModelBasic)
WHNResults <- report(WHNModelBasic, CI = (95))
library(report)
WHNResults <- report(WHNModelBasic, CI = (95))
WHNModelBasic <- glmer(data = WHNDataset, formula = trialResp.corr ~  Block + (1 |participant) + (1|image_file) , family = binomial, glmerControl( optimizer = "bobyqa"))
anova(WHNModel, WHNModelBasic, WHNModel1, WHNModel2, WHNModel3)
anova(WHNModelBasic, WHNModel2)
r.squaredGLMM(WHNModelBasic, WHNNullModel0)
library(MuMIn)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(splitstackshape)
library(stringr)
library(data.table)
library(dplyr)
library(tidyr)
library(gridExtra)
library(lme4)
library(lmerTest)
library(afex)
library(effects)
library(ggplot2)
library(ggthemes)
library(report)
library(janitor)
library(ggpubfigs)
dataFolder = "C:/Users/thoma/OneDrive - University of Glasgow/Desktop/Study 4/data/WHN/"
file_list <- list.files(path = dataFolder, pattern = "..csv$", all.files = TRUE, full.names = TRUE, recursive = TRUE)
RawWHNDataset <- data.frame()
#loop through all the fills, create a temporary container, remove the first, second and last rows and then add 1 to the trials counter. Then bind it to the dataset
for (file in file_list){
tempData <- read.csv(file, header = T)
RawWHNDataset <- bind_rows(RawWHNDataset, tempData)
}
SortedWHNDataset <- RawWHNDataset %>%
select(participant,image_file,Correct,trials_3.thisTrialN, conf_slider.response, conf_slider.rt, MiseryScale.response, Attention_slider.response, trialResp.keys, trialResp.corr, trialResp.rt)
SortedWHNDataset$Attention_slider.response <- as.numeric(SortedWHNDataset$Attention_slider.response)
SortedWHNDataset <- SortedWHNDataset %>%
#subset(image_file != "Slide24") %>%
subset(participant != "P01") %>%
subset(participant != "P02") %>%
subset(participant != "P03") %>%
subset(participant != "P04") %>%
subset(participant != "P05") %>%
subset(participant != "P06") %>%
subset(participant != "P13") %>%
subset(participant != "P21")
Counterbalancing <- read.csv("C:/Users/thoma/OneDrive - University of Glasgow/Desktop/Study 4/Study4Counterbalancing.csv", header = T)
Counterbalancing <- Counterbalancing %>%  select(participant, First,Second,Third,Fourth)
Counterbalancing <- na.omit(Counterbalancing)
OrderWHNDataset <- left_join(SortedWHNDataset, Counterbalancing, by = 'participant')
OrderWHNDataset$Block <- 'Baseline'
OrderWHNDataset$Block <-  if_else(OrderWHNDataset$trials_3.thisTrialN >= 30,OrderWHNDataset$Fourth,
if_else(OrderWHNDataset$trials_3.thisTrialN >= 20,OrderWHNDataset$Third,
if_else(OrderWHNDataset$trials_3.thisTrialN >= 10,OrderWHNDataset$Second,
OrderWHNDataset$First)))
WHNDataset <- OrderWHNDataset
WHNDataset <- WHNDataset[!is.na(WHNDataset$Correct),]
#WHNDataset <- left_join(WHNDataset, DemogDataOrg, by = "participant")
WHNDataset$participant <- as.factor(WHNDataset$participant)
WHNDataset$image_file[WHNDataset$image_file == "Slide1"] <- "Slide01"
WHNDataset$image_file[WHNDataset$image_file == "Slide2"] <- "Slide02"
WHNDataset$image_file[WHNDataset$image_file == "Slide3"] <- "Slide03"
WHNDataset$image_file[WHNDataset$image_file == "Slide4"] <- "Slide04"
WHNDataset$image_file[WHNDataset$image_file == "Slide5"] <- "Slide05"
WHNDataset$image_file[WHNDataset$image_file == "Slide6"] <- "Slide06"
WHNDataset$image_file[WHNDataset$image_file == "Slide7"] <- "Slide07"
WHNDataset$image_file[WHNDataset$image_file == "Slide8"] <- "Slide08"
WHNDataset$image_file[WHNDataset$image_file == "Slide9"] <- "Slide09"
WHNDataset$Block <- factor(WHNDataset$Block, levels = c("Control", "HUD",  "Cue", "HDD"))
# WHNDataset$UKLicense[WHNDataset$UKLicense == "I have a license from another country"] <- "No"
# WHNDataset$UKLicense <- as.factor(WHNDataset$UKLicense)
WHNCuedDataset <- WHNDataset# %>%
# subset(Block != "Baseline")
WHNCuedDataset$Block <- factor(WHNCuedDataset$Block, levels = c("Cue","Control", "HUD", "HDD"))
WHNHUDDataset <- WHNDataset# %>%
# subset(Block != "Baseline")
WHNHUDDataset$Block <- factor(WHNHUDDataset$Block, levels = c("HUD","Control", "Cue", "HDD"))
WHNHDDDataset <- WHNDataset# %>%
# subset(Block != "Baseline")
WHNHDDDataset$Block <- factor(WHNHUDDataset$Block, levels = c("HDD", "HUD","Control", "Cue"))
NoPpts <- n_distinct(WHNDataset$participant)
WHNSummary <- WHNDataset %>%
group_by(Block) %>%
summarise(n = (n()/NoPpts),
WHN = sum(trialResp.corr / NoPpts ) ,
WHNPercent = sum((trialResp.corr / NoPpts) /10) * 100,
sdWHN = sd(trialResp.corr),
seWHN = (sd(trialResp.corr))/ sqrt(NoPpts),
meanConf = mean(conf_slider.response),
sdConf = sd(conf_slider.response),
seConf = (sd(conf_slider.response))/ sqrt(NoPpts),
meanMISC = mean(MiseryScale.response),
sdMISC = sd(MiseryScale.response),
seMISC = (sd(MiseryScale.response))/ sqrt(NoPpts),
meanAttention = mean(Attention_slider.response, na.rm = T),
sdAttention = sd(Attention_slider.response, na.rm=T),
seAttention = (sd(Attention_slider.response, na.rm=T))/ sqrt(NoPpts),
trialRespmean = mean(trialResp.rt, na.rm=T),
trialRespSD = sd(trialResp.rt, na.rm=T)
)
ClipSummary <- WHNDataset %>%
group_by(image_file) %>%
summarise(n = n(),
WHN = sum(trialResp.corr),
sdWHN = sd(trialResp.corr))
ClipBlockSummary <- WHNDataset %>%
group_by(image_file, Block) %>%
summarise(n = n(),
WHNCorr = sum(trialResp.corr),
WHNIncorr = n() - sum(trialResp.corr),
RatioCorr = WHNCorr / n() * 100,
sdWHN = sd(trialResp.corr))
ClipConfSummary <- WHNDataset %>%
subset(Block == "Baseline") %>%
group_by(image_file) %>%
summarise(n = n(),
WHNCorr = sum(trialResp.corr),
WHNIncorr = n() - sum(trialResp.corr),
RatioCorr = WHNCorr / n() * 100,
conf = mean(conf_slider.response),
sdWHN = sd(trialResp.corr))
ggplot(data = ClipSummary, aes(x = image_file, y = WHN, fill = image_file))+
geom_col()+
theme(axis.text.x = element_text(angle = 90))+
labs(xlim(0,NoPpts))+
geom_hline(yintercept = NoPpts)+
geom_hline(yintercept = NoPpts / 4)
ggplot(data = WHNDataset, aes(x = image_file, y = conf_slider.response, fill = image_file))+
geom_boxplot()+
theme(axis.text.x = element_text(angle = 90))+
labs(xlim(0,1))
ggplot(data = ClipBlockSummary, aes(x = image_file, y = WHNCorr, fill = Block))+
geom_col()+
theme(axis.text.x = element_text(angle = 90))+
labs(xlim(0,NoPpts))+
geom_hline(yintercept = NoPpts, colour = 'blue')+
geom_hline(yintercept = NoPpts / 4, colour = 'red', linetype = 'dashed')
AttSum <- WHNDataset %>%
group_by(Block) %>%
summarise(n = NoPpts,
mean = mean(Attention_slider.response, na.rm = T),
sd = sd(Attention_slider.response, na.rm = T))
WHNBaseline <- as.numeric(WHNSummary[1,3])
ggplot(data = WHNSummary, aes(x = Block, y = WHN, fill = Block))+
geom_col()+
geom_errorbar(aes(ymin = WHN - sdWHN, ymax = WHN + sdWHN),
width = 0.2,
position = position_dodge(0.9))+
geom_hline(yintercept = WHNBaseline, linetype = "dashed", size = 0.5)+
#geom_hline(yintercept = 8, linetype = "solid", size = 1.0)+
#geom_hline(yintercept = 2, linetype = "dotted", size = 1.0)+
labs(title = "Average Hazard Prediction Score", x = "NDRT Presentation Condition", y = "Average number of correct responses")+
ylim(0,8)+
scale_fill_hue(l = 40)
ggplot(data = WHNDataset, aes(x = Block, y = trialResp.corr, fill = Block))+
stat_summary()
