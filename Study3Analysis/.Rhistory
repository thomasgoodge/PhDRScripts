title = "Nausea subscale",
tag = "")+
ylim(-10,17) +
scale_fill_hue(l = 2)+
geom_errorbar(aes(ymin = mean - (sd/2), ymax = mean + (sd/2)),
width = 0.2, position = position_dodge(width = 0.5))+
geom_hline(yintercept = 0, linetype = 'dotted')+
theme_bw()
KPSSQModelNausea = lm(NauseaScoreChange ~ Timepoint,
data = SSQKPConversionTotalSSQ)
Anova(KPSSQModelNausea,
type = "II")
NauseaNullmodel <- lmer(data = SSQKPConversionTotalSSQ, NauseaScoreChange ~ (1|participant))
Nauseamodel1 <- lmer(data = SSQKPConversionTotalSSQ, NauseaScoreChange ~ Timepoint +(1|participant))
anova(NauseaNullmodel, Nauseamodel1)
summary(NauseaNullmodel)
Nausearesults <- report(NauseaNullmodel, CI = 95)
#summary(results)
summary(Nausearesults)
#############################################################################
SSQKPConversionDisoriSummary <- SSQKPConversionTotalSSQ %>%
group_by(Timepoint) %>%
summarise(
n = n(),
mean = mean(DisoriScoreChange, na.rm = T),
sd = sd(DisoriScoreChange, na.rm = T)
)
SSQKPConversionDisoriBlockSummary <- SSQKPConversionTotalSSQ %>%
group_by(Timepoint, Block) %>%
summarise(
n = n(),
mean = mean(DisoriScoreChange, na.rm = T),
sd = sd(DisoriScoreChange, na.rm = T)
)
interaction.plot(x.factor =  SSQKPConversionDisoriSummary$Timepoint,
trace.factor = SSQKPConversionDisoriSummary$Timepoint,
response = SSQKPConversionDisoriSummary$mean,
fun = mean,
ylim = c(-5 , 10),
xlab = "Timepoint",
ylab = "Change in Disorientation subscore",
type= "b",
col=c("red","blue"),
pch=c(19,17,15),
trace.label = "Disorientation",
fixed=F,
leg.bty ="o")
ggplot(SSQKPConversionDisoriBlockSummary,  aes(x = Timepoint, y = mean, colour = Block, group = Block, shape = Block))+
#geom_point (size = 4.5, aes(color = Condition), shape = 8) +
geom_point (size = 3.5, position = position_dodge(width = 0.5)) +
scale_shape_manual(values=c(0,15,1,16,2,17,18,19,20,21,22,23,24))+
scale_color_brewer(palette="Dark2")+
geom_line(position = position_dodge(width = 0.5))+
labs(x = "Block",
y = "Disorientation",
title = "Disorientation Subscale",
tag = "")+
ylim(-15,20) +
scale_fill_hue(l = 2)+
geom_errorbar(aes(ymin = mean - (sd/2), ymax = mean + (sd/2)),
width = 0.2, position = position_dodge(width = 0.5))+
geom_hline(yintercept = 0, linetype = 'dotted')+
theme_bw()
KPSSQModelDisori = lm(DisoriScoreChange ~ Timepoint,
data = SSQKPConversionTotalSSQ)
Anova(KPSSQModelDisori,
type = "II")
DisoriNullmodel <- lmer(data = SSQKPConversionTotalSSQ, DisoriScoreChange ~ (1|participant))
Disorimodel1 <- lmer(data = SSQKPConversionTotalSSQ, DisoriScoreChange ~Timepoint + (1|participant))
anova(DisoriNullmodel, Disorimodel1)
summary(Disorimodel1)
Disoriresults <- report(Disorimodel1, CI = 95)
#summary(results)
summary(Disoriresults)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(splitstackshape)
library(stringr)
library(data.table)
library(dplyr)
library(tidyr)
library(gridExtra)
library(lme4)
library(lmerTest)
library(afex)
library(effects)
library(ggplot2)
library(ggthemes)
library(report)
library(janitor)
dataFolder = "C:/Users/thoma/OneDrive - University of Glasgow/Desktop/Study 3/data/Psychopy"
file_list <- list.files(path = dataFolder, pattern = "..csv$", all.files = TRUE, full.names = TRUE, recursive = TRUE)
RawWHNDataset <- data.frame()
#loop through all the fills, create a temporary container, remove the first, second and last rows and then add 1 to the trials counter. Then bind it to the dataset
for (file in file_list){
tempData <- read.csv(file, header = T)
RawWHNDataset <- bind_rows(RawWHNDataset, tempData)
}
SortedWHNDataset <- RawWHNDataset %>%
select(participant,image_file,Correct,trials_3.thisTrialN, conf_slider.response, conf_slider.rt, MiseryScale.response, Attention_slider.response, trialResp.keys, trialResp.corr)
SortedWHNDataset$Attention_slider.response <- as.numeric(SortedWHNDataset$Attention_slider.response)
Counterbalancing <- read.csv("C:/Users/thoma/OneDrive - University of Glasgow/Desktop/Study 3/Study3Counterbalancing.csv", header = T)
Counterbalancing <- Counterbalancing%>%  select(participant, Second, Third, Fourth, Fifth)
Counterbalancing <- na.omit(Counterbalancing)
DemogDataRaw <- read.csv("C:/Users/thoma/OneDrive - University of Glasgow/Desktop/Study 3/data/Qualtrics/Demogs/Study3Demogs.csv") %>%
select(starts_with('Q'))
#Change the first row into column headers
DemogDataOrg <- row_to_names(DemogDataRaw, row_number = 1)
#Remove consent form columns
DemogDataOrg <- DemogDataOrg[-1,-c(1:7)]
DemogDataOrg <- DemogDataOrg[1:9]
DemogDataOrg <- DemogDataOrg %>%
rename(participant = `Enter your Participant ID:`) %>%
rename(Age = `What is your age?`) %>%
rename(Gender = `Which gender do you identify with?`) %>%
rename(UKLicense = `Do you have a UK driving license?`) %>%
rename(CountryLicense = `Which country did you get your driving license in?`) %>%
rename(YearsExp = `How many years driving experience do you have, either from when you passed your driving test or when you started driving regularly? - (years/months)`) %>%
rename(UKYearsExp = `How many years driving experience do you have driving in the UK? (years, months)`) %>%
rename(GlasgowYearsExp = `How many years driving experience do you have driving around the West End of Glasgow? (years, months)`)
DemogDataOrg$Age = as.numeric(DemogDataOrg$Age)
DemogDataOrg$YearsExp = as.numeric(DemogDataOrg$YearsExp)
DemogDataOrg$UKYearsExp = as.numeric(DemogDataOrg$UKYearsExp)
DemogDataOrg$GlasgowYearsExp = as.numeric(DemogDataOrg$GlasgowYearsExp)
DemogDataOrg$Gender[DemogDataOrg$Gender == 'Woman'] <- 'Female'
DemogDataOrg$Gender[DemogDataOrg$Gender == 'Female '] <- 'Female'
DemogDataOrg$Gender[DemogDataOrg$Gender == 'Male '] <- 'Male'
DemogDataOrg <- DemogDataOrg %>%
#subset(image_file != "Slide24") %>%
subset(participant != "P03") %>%
subset(participant != "P04") %>%
subset(participant != "P15") %>%
subset(participant != "P16") %>%
subset(participant != "P24") %>%
subset(participant != "P01") %>%
subset(participant != "P02")
DemogSummaryTotal <- DemogDataOrg %>%
summarise(
n = n(),
AgeMean = mean(Age),
AgeSD = sd(Age),
Male = sum(Gender == 'Male'),
Female = sum(Gender == "Female"),
UKLicense = sum(UKLicense == "Yes"),
YearsExp = mean(YearsExp),
sdYearsExp = sd(DemogDataOrg$YearsExp, na.rm = T),
UKExp = mean(UKYearsExp, na.rm = T),
sdUKExp = sd(DemogDataOrg$UKYearsExp, na.rm = T),
GlasgowDriving = sum(GlasgowYearsExp != 0.00),
GlasgowExp = mean(GlasgowYearsExp),
sdGlasgowExp = sd(DemogDataOrg$GlasgowYearsExp, na.rm = T)
)
#Remove extra participants
# WHN1stDataset <- WHNDataset %>%
#   subset(participant != "P25") %>%
#   subset(participant != "P31")
OrderWHNDataset <- left_join(SortedWHNDataset, Counterbalancing, by = 'participant')
OrderWHNDataset$Block <- 'Baseline'
OrderWHNDataset$Block <-  if_else(OrderWHNDataset$trials_3.thisTrialN >= 32, OrderWHNDataset$Fifth,
if_else(OrderWHNDataset$trials_3.thisTrialN >= 24, OrderWHNDataset$Fourth,
if_else(OrderWHNDataset$trials_3.thisTrialN >= 16, OrderWHNDataset$Third,
if_else(OrderWHNDataset$trials_3.thisTrialN >= 8, OrderWHNDataset$Second,
'Baseline'))))
WHNDataset <- OrderWHNDataset
WHNDataset <- WHNDataset[!is.na(WHNDataset$Correct),]
WHNDataset <- left_join(WHNDataset, DemogDataOrg, by = "participant")
WHNDataset$participant <- as.factor(WHNDataset$participant)
WHNDataset$image_file[WHNDataset$image_file == "Slide1"] <- "Slide01"
WHNDataset$image_file[WHNDataset$image_file == "Slide2"] <- "Slide02"
WHNDataset$image_file[WHNDataset$image_file == "Slide3"] <- "Slide03"
WHNDataset$image_file[WHNDataset$image_file == "Slide4"] <- "Slide04"
WHNDataset$image_file[WHNDataset$image_file == "Slide5"] <- "Slide05"
WHNDataset$image_file[WHNDataset$image_file == "Slide6"] <- "Slide06"
WHNDataset$image_file[WHNDataset$image_file == "Slide7"] <- "Slide07"
WHNDataset$image_file[WHNDataset$image_file == "Slide8"] <- "Slide08"
WHNDataset$image_file[WHNDataset$image_file == "Slide9"] <- "Slide09"
WHNDataset$Block[WHNDataset$Block == "GemsBasic"] <- "HUD - AR"
WHNDataset$Block[WHNDataset$Block == "GemsCued"] <- "HUD - Cued AR"
WHNDataset$Block[WHNDataset$Block == "GemsTablet"] <- "HDD - AR"
WHNDataset$Block[WHNDataset$Block == "Tablet"] <- "HDD - Tablet"
WHNDataset$Block <- factor(WHNDataset$Block, levels = c("Baseline", "HUD - AR","HUD - Cued AR", "HDD - AR", "HDD - Tablet"))
WHNDataset$UKLicense[WHNDataset$UKLicense == "I have a license from another country"] <- "No"
WHNDataset$UKLicense <- as.factor(WHNDataset$UKLicense)
WHNDataset <- WHNDataset %>%
#subset(image_file != "Slide24") %>%
subset(participant != "P01") %>%
subset(participant != "P02") %>%
subset(participant != "P03") %>%
subset(participant != "P04") %>%
subset(participant != "P15") %>%
subset(participant != "P16") %>%
subset(participant != "P24")
FullNoPpts <- n_distinct(WHNDataset$participant)
#Remove extra participants
# WHN1stDataset <- WHNDataset %>%
#   subset(participant != "P25") %>%
#   subset(participant != "P31")
#
# WHN2ndDataset <- WHNDataset %>%
#   subset(participant != "P01") %>%
#   subset(participant != "P02")
NoPpts <- n_distinct(WHNDataset$participant)
WHNSummary <- WHNDataset %>%
group_by(Block) %>%
summarise(n = n()/FullNoPpts,
WHN = sum(trialResp.corr) / FullNoPpts,
WHNPercent = sum((trialResp.corr / FullNoPpts) /8) * 100,
sdWHN = sd(trialResp.corr),
seWHN = (sd(trialResp.corr))/ sqrt(FullNoPpts),
meanConf = mean(conf_slider.response),
sdConf = sd(conf_slider.response),
seConf = (sd(conf_slider.response))/ sqrt(FullNoPpts),
meanMISC = mean(MiseryScale.response),
sdMISC = sd(MiseryScale.response),
seMISC = (sd(MiseryScale.response))/ sqrt(FullNoPpts),
meanAttention = mean(Attention_slider.response, na.rm = T),
sdAttention = sd(Attention_slider.response, na.rm=T),
seAttention = (sd(Attention_slider.response, na.rm=T))/ sqrt(FullNoPpts),
)
# WHN1stSummary <- WHN1stDataset %>%
#   group_by(Block) %>%
#   summarise(n = n()/NoPpts,
#             WHN = sum(trialResp.corr) / NoPpts,
#             WHNPercent = sum((trialResp.corr / NoPpts) /8) * 100,
#             sdWHN = sd(trialResp.corr),
#             seWHN = (sd(trialResp.corr))/ sqrt(NoPpts),
#             meanConf = mean(conf_slider.response),
#             sdConf = sd(conf_slider.response),
#             seConf = (sd(conf_slider.response))/ sqrt(NoPpts),
#             meanMISC = mean(MiseryScale.response),
#             sdMISC = sd(MiseryScale.response),
#             seMISC = (sd(MiseryScale.response))/ sqrt(NoPpts),
#             meanAttention = mean(Attention_slider.response, na.rm = T),
#             sdAttention = sd(Attention_slider.response, na.rm=T),
#             seAttention = (sd(Attention_slider.response, na.rm=T))/ sqrt(NoPpts),
#             )
#
# WHN2ndSummary <- WHN2ndDataset %>%
#   group_by(Block) %>%
#   summarise(n = n()/NoPpts,
#             WHN = sum(trialResp.corr) / NoPpts,
#             WHNPercent = sum((trialResp.corr / NoPpts) /8) * 100,
#             sdWHN = sd(trialResp.corr),
#             seWHN = (sd(trialResp.corr))/ sqrt(NoPpts),
#             meanConf = mean(conf_slider.response),
#             sdConf = sd(conf_slider.response),
#             seConf = (sd(conf_slider.response))/ sqrt(NoPpts),
#             meanMISC = mean(MiseryScale.response),
#             sdMISC = sd(MiseryScale.response),
#             seMISC = (sd(MiseryScale.response))/ sqrt(NoPpts),
#             meanAttention = mean(Attention_slider.response, na.rm = T),
#             sdAttention = sd(Attention_slider.response, na.rm=T),
#             seAttention = (sd(Attention_slider.response, na.rm=T))/ sqrt(NoPpts),
#             )
WHNCuedDataset <- WHNDataset %>%
subset(Block != "Baseline")
WHNCuedDataset$Block <- factor(WHNCuedDataset$Block, levels = c("HUD - Cued AR","HUD - AR", "HDD - AR", "HDD - Tablet"))
ClipSummary <- WHNDataset %>%
group_by(image_file) %>%
summarise(n = n(),
WHN = sum(trialResp.corr),
sdWHN = sd(trialResp.corr))
ClipBlockSummary <- WHNDataset %>%
group_by(image_file, Block) %>%
summarise(n = n(),
WHNCorr = sum(trialResp.corr),
WHNIncorr = n() - sum(trialResp.corr),
RatioCorr = WHNCorr / n() * 100,
sdWHN = sd(trialResp.corr))
ClipConfSummary <- WHNDataset %>%
subset(Block == "Baseline") %>%
group_by(image_file) %>%
summarise(n = n(),
WHNCorr = sum(trialResp.corr),
WHNIncorr = n() - sum(trialResp.corr),
RatioCorr = WHNCorr / n() * 100,
conf = mean(conf_slider.response),
sdWHN = sd(trialResp.corr))
ggplot(data = ClipSummary, aes(x = image_file, y = WHN, fill = image_file))+
geom_col()+
theme(axis.text.x = element_text(angle = 90))+
labs(xlim(0,NoPpts))+
geom_hline(yintercept = NoPpts)+
geom_hline(yintercept = NoPpts / 4)
ggplot(data = WHNDataset, aes(x = image_file, y = conf_slider.response, fill = image_file))+
geom_boxplot()+
theme(axis.text.x = element_text(angle = 90))+
labs(xlim(0,1))
WHNBaselineDataset <- WHNDataset %>%
subset((Block == "Baseline"))
ggplot(data = WHNBaselineDataset)+
geom_col(aes(x = image_file, y = trialResp.corr, fill = image_file))+
#geom_boxplot(aes(x = image_file, y = conf_slider.response * 100, fill = image_file))+
theme(axis.text.x = element_text(angle = 90))
#Confidence graph
ggplot(data = WHNBaselineDataset)+
geom_boxplot(aes(x = image_file, y = conf_slider.response, fill = image_file))+
#geom_boxplot(aes(x = image_file, y = conf_slider.response * 100, fill = image_file))+
theme(axis.text.x = element_text(angle = 90))+
geom_hline(yintercept = 0.9, linetype = "dashed", colour = "blue")+
geom_hline(yintercept = 0.25, linetype = "dashed", colour = "red")
ggplot(data = ClipBlockSummary, aes(x = image_file, y = WHNCorr, fill = Block))+
geom_col()+
theme(axis.text.x = element_text(angle = 90))+
labs(xlim(0,NoPpts))+
geom_hline(yintercept = NoPpts, colour = 'blue')+
geom_hline(yintercept = NoPpts / 4, colour = 'red', linetype = 'dashed')
ggplot(data = ClipBlockSummary, aes(x = image_file, y = WHNIncorr, fill = Block))+
geom_col()+
theme(axis.text.x = element_text(angle = 90))+
labs(xlim(0,NoPpts))+
geom_hline(yintercept = NoPpts, colour = 'blue')+
geom_hline(yintercept = NoPpts / 4, colour = 'red', linetype = 'dashed')
AttSum <- WHNDataset %>%
group_by(Block) %>%
summarise(n = NoPpts,
mean = mean(Attention_slider.response, na.rm = T),
sd = sd(Attention_slider.response, na.rm = T))
#split into uk & non-UK drivers
WHNBaseline <- as.numeric(WHNSummary[1,3])
ggplot(data = WHNSummary, aes(x = Block, y = WHN, fill = Block))+
geom_col()+
geom_errorbar(aes(ymin = WHN - sdWHN, ymax = WHN + sdWHN),
width = 0.2,
position = position_dodge(0.9))+
geom_hline(yintercept = WHNBaseline, linetype = "dashed", size = 0.5)+
#geom_hline(yintercept = 8, linetype = "solid", size = 1.0)+
#geom_hline(yintercept = 2, linetype = "dotted", size = 1.0)+
labs(title = "Average Hazard Prediction Score", x = "NDRT Presentation Condition", y = "Average number of correct responses")+
ylim(0,8)+
scale_fill_hue(l = 40)
WHNBaseline <- as.numeric(WHNSummary[1,3])
ggplot(data = WHNSummary, aes(x = Block, y = WHN, fill = Block))+
geom_col()+
geom_errorbar(aes(ymin = WHN - sdWHN, ymax = WHN + sdWHN),
width = 0.2,
position = position_dodge(0.9))+
geom_hline(yintercept = WHNBaseline, linetype = "dashed", size = 0.5)+
#geom_hline(yintercept = 8, linetype = "solid", size = 1.0)+
#geom_hline(yintercept = 2, linetype = "dotted", size = 1.0)+
labs(title = "Average Hazard Prediction Score", x = "NDRT Presentation Condition", y = "Average number of correct responses")+
ylim(0,8)+
scale_fill_hue(l = 40)
ggplot(data = WHNDataset, aes(x = Block, y = trialResp.corr, fill = Block))+
stat_summary()
WHNANOVA <- aov(trialResp.corr ~ Block , data = WHNDataset)
summary(WHNANOVA)
TukeyHSD(WHNANOVA)
ConfBaseline <- as.numeric(WHNSummary[1,7])
ggplot(data = WHNSummary, aes(x = Block, y = meanConf, fill = Block))+
geom_col()+
geom_errorbar(aes(ymin = meanConf - sdConf/2, ymax = meanConf + sdConf/2),
width = 0.2,
position = position_dodge(0.9))+
geom_hline(yintercept = ConfBaseline, linetype = "dashed", size = 1.0)+
labs(title = "Average Confidence Score", y = "Mean Confidence Rating", x = "NDRT Presentation Condition")+
ylim(0,1.0)+
scale_fill_hue(l = 40)
ConfANOVA <- aov(conf_slider.rt ~ Block , data = WHNDataset)
summary(ConfANOVA)
TukeyHSD(ConfANOVA)
MISCDataset <- WHNDataset %>%
group_by(trials_3.thisTrialN, Block) %>%
summarise(mean = mean(MiseryScale.response),
sd = sd(MiseryScale.response))
ggplot(data = MISCDataset, aes(x = trials_3.thisTrialN, y = mean))+
geom_line(aes(colour  = factor(Block)))+
geom_point(aes(colour = Block))+
geom_ribbon(aes(ymin =MISCDataset$mean - MISCDataset$sd, ymax = MISCDataset$mean + MISCDataset$sd, fill = Block),alpha= 0.0) +
labs(title = "MISC Score")
MISCARDataset <- MISCDataset %>%
subset(Block != "HUD - Cued AR") %>%
subset(Block != "HDD - Tablet") %>%
subset(Block != "HDD - AR")
MISCCueDataset <- MISCDataset %>%
subset(Block != "HUD - AR") %>%
subset(Block != "HDD - Tablet") %>%
subset(Block != "HDD - AR")
MISCTabDataset <- MISCDataset %>%
subset(Block != "HUD - AR") %>%
subset(Block != "HUD - Cued AR") %>%
subset(Block != "HDD - AR")
MISCGemTabDataset <- MISCDataset %>%
subset(Block != "HUD - AR") %>%
subset(Block != "HDD - Tablet") %>%
subset(Block != "HUD - Cued AR")
ggplot(data = MISCARDataset, aes(x = trials_3.thisTrialN, y = mean))+
geom_line(aes(colour  = factor(Block)))+
geom_point(aes(colour = Block))+
geom_ribbon(aes(ymin =MISCARDataset$mean - MISCARDataset$sd, ymax = MISCARDataset$mean + MISCARDataset$sd, fill = Block),alpha= 0.2) +
geom_vline(xintercept = 8)+
geom_vline(xintercept = 16)+
geom_vline(xintercept = 24)+
geom_vline(xintercept = 32)+
labs(title = "MISC Score - AR HUD")+
scale_x_continuous(breaks = seq(0, 40, 8))
ggplot(data = MISCCueDataset, aes(x = trials_3.thisTrialN, y = mean))+
geom_line(aes(colour  = factor(Block)))+
geom_point(aes(colour = Block))+
geom_ribbon(aes(ymin =MISCCueDataset$mean - MISCCueDataset$sd, ymax = MISCCueDataset$mean + MISCCueDataset$sd, fill = Block),alpha= 0.2) +
geom_vline(xintercept = 8)+
geom_vline(xintercept = 16)+
geom_vline(xintercept = 24)+
geom_vline(xintercept = 32)+
labs(title = "MISC Score - Cued AR HUD")+
scale_x_continuous(breaks = seq(0, 40, 8))
ggplot(data = MISCTabDataset, aes(x = trials_3.thisTrialN, y = mean))+
geom_line(aes(colour  = factor(Block)))+
geom_point(aes(colour = Block))+
geom_ribbon(aes(ymin =MISCTabDataset$mean - MISCTabDataset$sd, ymax = MISCTabDataset$mean + MISCTabDataset$sd, fill = Block),alpha= 0.2) +
geom_vline(xintercept = 8)+
geom_vline(xintercept = 16)+
geom_vline(xintercept = 24)+
geom_vline(xintercept = 32)+
labs(title = "MISC Score - HDD - Tablet")+
scale_x_continuous(breaks = seq(0, 40, 8))
ggplot(data = MISCGemTabDataset, aes(x = trials_3.thisTrialN, y = mean))+
geom_line(aes(colour  = factor(Block)))+
geom_point(aes(colour = Block))+
geom_ribbon(aes(ymin =MISCGemTabDataset$mean - MISCGemTabDataset$sd, ymax = MISCGemTabDataset$mean + MISCGemTabDataset$sd, fill = Block),alpha= 0.2) +
geom_vline(xintercept = 8)+
geom_vline(xintercept = 16)+
geom_vline(xintercept = 24)+
geom_vline(xintercept = 32)+
labs(title = "MISC Score - HDD - AR")+
scale_x_continuous(breaks = seq(0, 40, 8))
MISCANOVA <- aov(MiseryScale.response ~ Block , data = WHNDataset)
summary(MISCANOVA)
TukeyHSD(MISCANOVA)
AttBaseline <- as.double(AttSum[1,3])
ggplot(data = AttSum, aes(x = Block, y = mean, fill = Block))+
geom_col()+
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd),
width = 0.2,
position = position_dodge(0.9))+
labs(title = "Subjective Attention Rating", y = "Mean Attention Rating", x = "NDRT Presentation Condition")+
geom_hline(yintercept = AttBaseline, linetype = "dashed", size = 1.0)+
scale_fill_hue(l = 40)
AttANOVA <- aov(Attention_slider.response ~ Block , data = WHNDataset)
summary(AttANOVA)
TukeyHSD(AttANOVA)
#Need to user glmer() as correct response is binomial
WHNNullModel0 <- glmer(data = WHNDataset, formula = trialResp.corr ~  (1|participant) + (1|image_file) , family = binomial, glmerControl( optimizer = "bobyqa"))
summary(WHNNullModel0)
WHNNullModel <- glmer(data = WHNDataset, formula = trialResp.corr ~  (1 + Block|participant) + (1 + Block|image_file) , family = binomial, glmerControl( optimizer = "bobyqa"))
summary(WHNNullModel)
anova(WHNNullModel, WHNNullModel0)
WHNModel0 <- glmer(data = WHNDataset, formula = trialResp.corr ~  Block + (1|participant) + (1|image_file) + (1|YearsExp) , family = binomial, glmerControl( optimizer = "bobyqa"))
summary(WHNModel0)
WHNModel1 <- glmer(data = WHNDataset, formula = trialResp.corr ~  Block + (1 + Block|participant) + (1 + Block|image_file) , family = binomial, glmerControl( optimizer = "bobyqa"))
summary(WHNModel1)
WHNModel2 <- glmer(data = WHNDataset, formula = trialResp.corr ~  Block + (1|participant) + (1 + Block|participant) + (1 + Block|image_file) , family = binomial, glmerControl( optimizer = "bobyqa"))
summary(WHNModel2)
WHNModel3 <- glmer(data = WHNDataset, formula = trialResp.corr ~  Block + (1|participant) + (1|image_file) + (1 + Block|participant) + (1 + Block|image_file) , family = binomial, glmerControl( optimizer = "bobyqa"))
summary(WHNModel3)
WHNModel4 <- glmer(data = WHNDataset, formula = trialResp.corr ~  Block + (1|participant) + (1|image_file) + (1 + Block|participant) + (1 + Block|image_file) + (1|YearsExp), family = binomial, glmerControl( optimizer = "bobyqa"))
summary(WHNModel4)
anova(WHNNullModel, WHNModel0, WHNModel1, WHNModel2, WHNModel3)
anova(WHNNullModel0, WHNModel0, WHNModel2, WHNModel3)
anova(WHNModel0, WHNModel1)
# WHNModel1st = glmer(data = WHN1stDataset, formula = trialResp.corr ~ Block +  (1|participant) + (1|image_file) ,family = binomial)
# summary(WHNModel1st)
#
# WHNModel2nd = glmer(data = WHN2ndDataset, formula = trialResp.corr ~ Block +  (1|participant) + (1|image_file) ,family = binomial)
# summary(WHNModel2nd)
#anova(WHNModel1st, WHNModel2nd)
ggplot(WHNDataset, aes(x = Block, y = trialResp.corr, color=Block)) +
stat_summary(fun=mean, geom="point", size=3) +
stat_summary(fun.data=mean_se, geom="errorbar", width=0.2) +
stat_summary(aes(y=fitted(WHNModel1)), fun=mean, geom="line") +
labs(x="Block", y="Average Percentage Correct on WHN",
color="Block") +
theme_bw()
WHNModel2 = glmer(data = WHNDataset, formula = trialResp.corr ~ Block + (1|participant) + (1|image_file) + (1 + Block|image_file) ,family = binomial, control = glmerControl(optimizer="bobyqa"))
summary(WHNModel2)
anova(WHNModel2, WHNModel1)
#Model including Main effect of UK driver license
WHNModelYears = glmer(data = WHNDataset, formula = trialResp.corr ~ Block + YearsExp +(1|participant) + (1|image_file) ,  family = binomial)
summary(WHNModelYears)
WHNModelUK = glmer(data = WHNDataset, formula = trialResp.corr ~ Block + UKLicense +(1|participant) + (1|image_file) ,  family = binomial)
summary(WHNModelUK)
WHNModelUKYears = glmer(data = WHNDataset, formula = trialResp.corr ~ Block + UKYearsExp +(1|participant) + (1|image_file) ,  family = binomial)
summary(WHNModelUKYears)
WHNModelGlas = glmer(data = WHNDataset, formula = trialResp.corr ~ Block + GlasgowYearsExp +(1|participant) + (1|image_file) ,  family = binomial)
summary(WHNModelGlas)
WHNModelClip = glmer(data = WHNDataset, formula = trialResp.corr ~ Block + (1|Block:image_file) +(1|participant),  family = binomial, glmerControl(optimizer = "bobyqa"))
summary(WHNModelClip)
WHNModelID = glmer(data = WHNDataset, formula = trialResp.corr ~ Block   +(1+ Block|participant),  family = binomial, glmerControl(optimizer = "bobyqa"))
summary(WHNModelID)
ggplot(WHNDataset, aes(x = image_file, y = trialResp.corr, color=image_file)) +
stat_summary(fun=mean, geom="point", size=3) +
stat_summary(fun.data=mean_se, geom="errorbar", width=0.2) +
stat_summary(aes(y=fitted(WHNModel1)), fun=mean, geom="line") +
labs(x="Block", y="Average Percentage Correct on WHN",
color="Block") +
theme_bw()
anova(WHNModel1, WHNModel2)
#anova(WHNModel1, WHNModel3)
#summary(ImageWithinBlock)
ef <- as.data.frame(effect("Block", WHNModel2))
ggplot(ef, aes(Block, fit, color=fit)) +
geom_pointrange(aes(ymax=upper, ymin=lower), position=position_dodge(width = 0.2))+
theme_classic() # just for a change :)
mixed(data = WHNDataset, formula = trialResp.corr ~ Block + (1+Block |participant) + (1 + Block|image_file), method = 'LRT')
all_fit(WHNModel1)
anova(WHNNullModel, WHNModel1)
anova(WHNModel2, WHNModel1)
WHNresults <- report(WHNModel0, CI = 95)
fixef(WHNModel0)
summary(WHNModel0)
print(WHNresults)
CueWHNModelNull = glmer(data = WHNCuedDataset, formula = trialResp.corr ~ (1|participant) + (1|image_file) + (1|Block),family = binomial)
