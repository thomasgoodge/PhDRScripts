RTExpPlots <- lapply(RTExpList, ggplotExpRT)
for (p in RTExpPlots){
print(p)
}
arg_list <- c(RTExpPlots, list(ncol=2))
#jpeg('histogram', width=1024, height=968)
#grid.arrange(grobs = RTExpPlots, ncol = 2, nrow = 4)
#graphics.off()
RTHazardData <- RTExpData
RTHazardData$Group <- paste(RTHazardData$Block, RTHazardData$Condition, sep=" ")
RTHazardData <- na.omit(RTHazardData)
RTHazardData$RTStandard <- RTHazardData$button_resp.rt - RTHazardData$Onset
RTHazardData<- RTHazardData[RTHazardData$button_resp.rt <= RTHazardData$Offset ,]
RTHazardData$PreWindow <- 0
RTHazardData$PreWindow <- if_else(RTHazardData$RTStandard > 0, FALSE, TRUE)
RTPreWindowSumm <- RTHazardData %>%
group_by(ClipNumber) %>%
dplyr::summarise(n = n(),
sdRT = sd(RTStandard, na.rm = T))
RTHazardData <- RTHazardData[RTHazardData$button_resp.rt >= RTHazardData$Onset -1.0,] #######
table(RTHazardData$PreWindow)
#Remove duplicate responses from each participant, taking only the first one
RTHazardData <-  subset(RTHazardData, !duplicated(subset(RTHazardData, select = c(participant, ClipNumber))))
RTHazardData$Group <- paste(RTHazardData$Block, RTHazardData$Condition, sep=" ")
# RTHazardDataStrict <- na.omit(RTHazardDataStrict)
#
# RTHazardDataStrict$RTStandard <- RTHazardDataStrict$button_resp.rt - RTHazardDataStrict$Onset
# RTHazardDataStrict$PreWindow <- 0
# RTHazardDataStrict$PreWindow <- if_else(RTHazardDataStrict$RTStandard > 0, FALSE, TRUE)
#
# RTPreWindowSumm <- RTHazardDataStrict %>%
#   group_by(Block, PreWindow, Condition) %>%
#   summarise(n = n(),
#             mean = mean(RTStandard))
# #Remove duplicate responses from each participant, taking only the first one
# RTHazardDataStrict <-  subset(RTHazardDataStrict, !duplicated(subset(RTHazardDataStrict, select = c(participant, ClipNumber))))
RTPreHazardData<- RTHazardData %>%
filter(PreWindow == TRUE)
RTPreHazardDataSum <- RTPreHazardData %>%
group_by(Block, Condition, ClipNumber) %>%
summarise(n = n(),
mean = mean(RTStandard),
sd = sd(RTStandard))
# RTPostHazardData<- RTHazardData %>%
#   filter(PreWindow == FALSE) %>%
#   groupb
#   summarise(sd = sd(RTStandard))
#
# RTPostHazardDataSum <- RTPostHazardData %>%
#    group_by(ClipNumber) %>%
#   summarise(n = n(),
#             mean = mean(RTStandard),
#             sd = sd(RTStandard))
RTHazardDataCorr <- RTHazardData %>%
group_by(Block, Condition) %>%
summarise(count = n())
RTHazardDataCorr$Group <- paste(RTHazardDataCorr$Block, RTHazardDataCorr$Condition, sep=" ")
ClipCount <- table(RTHazardData$ClipNumber)
ClipCount
ggplot(RTHazardDataCorr, aes(x = Condition, y = count, fill = Block ))+
geom_col(position = 'dodge')+
ylim(0,140)+
geom_hline(yintercept = 140)
# RTHazardDataCorr <- RTHazardDataStrict %>%
#   group_by(Block, Condition) %>%
#   summarise(count = n())
# RTHazardDataCorr$Group <- paste(RTHazardDataCorr$Block, RTHazardDataCorr$Condition, sep=" ")
#
#
# ClipCount <- table(RTHazardData$ClipNumber)
#
# ClipCount
#
# ggplot(RTHazardDataCorr, aes(x = Condition, y = count, fill = Block ))+
#   geom_col(position = 'dodge')+
#   ylim(0,140)+
#   geom_hline(yintercept = 140)
#
RTHazardDataClip <- RTHazardData %>%
group_by(ClipNumber, Block, Condition) %>%
summarise(resp = mean(button_resp.rt),
onset = Onset,
RT = resp - onset)
RTHazardDataClip <- RTHazardDataClip[!duplicated(RTHazardDataClip),]
RTHazardDataClip$Group <- paste(RTHazardDataClip$Block, RTHazardDataClip$Condition, sep=" ")
# RTHazardDataClipStrict <- RTHazardDataStrict %>%
#   group_by(ClipNumber, Block, Condition) %>%
#   summarise(resp = mean(button_resp.rt),
#             onset = Onset,
#             RT = resp - onset)
#
# RTHazardDataClipStrict <- RTHazardDataClipStrict[!duplicated(RTHazardDataClipStrict),]
# RTHazardDataClipStrict$Group <- paste(RTHazardDataClipStrict$Block, RTHazardDataClipStrict$Condition, sep=" ")
ggplot(RTHazardData, aes(x = ClipNumber, y = button_resp.rt, colour = Block))+
# geom_point(shape = 4, size = 2)+
geom_boxplot()+
geom_point(aes(x = ClipNumber, y = Onset), colour = 'black', shape = 4)
# geom_density(
# ggplot(RTHazardDataStrict, aes(x = ClipNumber, y = button_resp.rt, colour = Block))+
#    # geom_point(shape = 4, size = 2)+
#   geom_boxplot()+
#   geom_point(aes(x = ClipNumber, y = Onset), colour = 'black', shape = 4)
#    # geom_density(
#
ggplotHazRT <- function(lm.input) {
x <- ggplot(lm.input, aes(RTStandard, fill = Condition, na.rm = T))+
labs(x = lm.input$ClipNumber, )+
geom_histogram(binwidth = 0.1, colour = 'black', na.rm = T, position = "stack", show.legend = F)+
xlim(-2.0, 2.0)+
ylim(0,7)+
geom_vline(xintercept = 0, linetype = "dotted", colour = "black", size = 1.0)
# geom_density()
return(x)
}
RTHazardList <- split(RTHazardData, f= RTHazardData$ClipNumber)
RTHazardPlots <- lapply(RTHazardList, ggplotHazRT)
#list2env(RTHazardPlots, envir=globalenv())
for (p in RTHazardPlots){
print(p)
}
#grid.arrange(grobs = RTHazardPlots, ncol = 2, legend())
RTHazardSummary <- RTHazardData %>%
group_by(Condition, Block, ClipNumber) %>%
summarise(
mean = mean(RTStandard)
)
RTOverallSummary <- RTHazardData %>%
group_by(Block) %>%
summarise(
mean = mean(RTStandard),
sd = sd(RTStandard)
) %>%
mutate(Condition = "Overall")
RTGroupSummary <- RTHazardData %>%
group_by(Condition, Block, ) %>%
summarise(
mean = mean(RTStandard),
sd = sd(RTStandard)
)
RTGroupSummary <- rbind(RTGroupSummary, RTOverallSummary)
PivotRTHazardSummary<- RTHazardSummary %>%
pivot_wider(names_from = ClipNumber, values_from =mean)
#Function for interaction plots
ggplotIntRT <- function(lm.input) {
x <-  ggplot(lm.input,  aes(x = Block, y = RTStandard, colour = Condition))+
#geom_point (size = 4.5, aes(color = Condition), shape = 8) +
#geom_line() +
geom_boxplot()+
labs(x = "Block",
y = "Mean Reaction Time (s)",
title = lm.input$ClipNumber,
subtitle =  lm.input$Hazard.Location,
tag = "",)+
geom_hline(yintercept = 0,  linetype = "dotted", colour = "black", size = 1.0)
theme_bw()
return(x)
}
#Print out the interaction plots for each clip
RTHazList <- split(RTHazardData, f= RTHazardData$ClipNumber)
RTHazPlots <- lapply(RTHazList, ggplotIntRT)
for (p in RTHazPlots){
print(p)
}
ggplot(RTOverallSummary,  aes(x = Block, y = mean))+
#geom_point (size = 4.5, aes(color = Condition), shape = 8) +
#geom_line() +
geom_line(size = 0.3,) +
geom_point(size = 4.5 ) +
labs(x = "Block",
y = "Mean Reaction Time for hazard windows",
title = "Overall",
tag = "")+
ylim(-1.0,1.0) +
#geom_hline(yintercept = 0,  linetype = "dotted", colour = "black", size = 1.0)+
geom_hline(yintercept = -1.0,  linetype = "solid", colour = "black", size = 1.0)+
#geom_hline(yintercept = -1.0,  linetype = "dotted", colour = "red", size = 1.0)+
scale_shape(solid = F)+
theme_bw()
ggsave("OverallRTPlot.png")
ggplot(RTGroupSummary,  aes(x = Block, y = mean, group = Condition))+
#geom_point (size = 4.5, aes(color = Condition), shape = 8) +
#geom_line() +
geom_line(size = 0.3, aes(linetype = Condition, colour = Condition)) +
geom_point (size = 4.5, aes(shape = Condition, colour = Condition), ) +
labs(x = "Block",
y = "Mean Reaction Time for hazard windows",
title = "Overall",
tag = "")+
ylim(-1.0,1.0) +
geom_hline(yintercept = 0,  linetype = "dotted", colour = "black", size = 1.0)+
geom_hline(yintercept = -1.0,  linetype = "solid", colour = "black", size = 1.0)+
#geom_hline(yintercept = -1.0,  linetype = "dotted", colour = "red", size = 1.0)+
scale_shape(solid = F) +
theme_bw()
ggsave("GroupRTPlot.png")
interaction.plot(x.factor =  RTGroupSummary$Block,
trace.factor = RTGroupSummary$Condition,
response = RTGroupSummary$mean,
fun = mean,
ylim = (c(-1.0,1.0)),
xlab = "Block",
ylab = "Hazard Perception Reaction time (s)",
type= "b",
col=c("red","blue", "green"),
pch=c(19,17,15),
trace.label = "Condition",
fixed=T,
leg.bty ="o")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(splitstackshape)
library(stringr)
library(data.table)
library(dplyr)
library(tidyr)
library(gridExtra)
library(lme4)
library(lmerTest)
dataFolder = "C:/Users/thoma/OneDrive - University of Glasgow/Desktop/Study3/data"
file_list <- list.files(path = dataFolder, pattern = "..csv$", all.files = TRUE, full.names = TRUE, recursive = TRUE)
RawWHNDataset <- data.frame()
#loop through all the fills, create a temporary container, remove the first, second and last rows and then add 1 to the trials counter. Then bind it to the dataset
for (file in file_list){
tempData <- read.csv(file, header = T)
RawWHNDataset <- bind_rows(RawWHNDataset, tempData)
}
SortedWHNDataset <- RawWHNDataset %>%
select(participant,image_file,Correct,trials_3.thisTrialN, conf_slider.response, conf_slider.rt, MiseryScale.response, Attention_slider.response, trialResp.keys, trialResp.corr)
SortedWHNDataset$Attention_slider.response <- as.numeric(SortedWHNDataset$Attention_slider.response)
Counterbalancing <- read.csv("C:/Users/thoma/OneDrive - University of Glasgow/Desktop/Study3/Study3Counterbalancing.csv", header = T)
Counterbalancing <- Counterbalancing%>%  select(participant, Second, Third, Fourth)
OrderWHNDataset <- left_join(SortedWHNDataset, Counterbalancing, by = 'participant')
OrderWHNDataset$Block <- 'Baseline'
OrderWHNDataset$Block <- if_else(OrderWHNDataset$trials_3.thisTrialN > 29, OrderWHNDataset$Fourth,
if_else(OrderWHNDataset$trials_3.thisTrialN >19, OrderWHNDataset$Third,
if_else(OrderWHNDataset$trials_3.thisTrialN >9, OrderWHNDataset$Second, 'Baseline')))
WHNDataset <- OrderWHNDataset
WHNDataset <- WHNDataset[!is.na(WHNDataset$Correct),]
NoPpts <- n_distinct(WHNDataset$participant)
WHNSummary <- WHNDataset %>%
group_by(Block) %>%
summarise(n = n()/NoPpts,
WHN = sum(trialResp.corr) / NoPpts,
sdWHN = sd(trialResp.corr),
meanConf = mean(conf_slider.response),
sdConf = sd(conf_slider.response),
meanMISC = mean(MiseryScale.response),
sdMISC = sd(MiseryScale.response),
meanAttention = mean(Attention_slider.response),
sdAttention = sd(Attention_slider.response)
)
ggplot(data = WHNSummary, aes(x = Block, y = WHN, fill = Block))+
geom_col()+
geom_errorbar(aes(ymin = WHN - sdWHN, ymax = WHN + sdWHN),
width = 0.2,
position = position_dodge(0.9))+
labs(title = "WHN Score", xlim(0,10))
ggplot(data = WHNSummary, aes(x = Block, y = meanConf, fill = Block))+
geom_col()+
geom_errorbar(aes(ymin = meanConf - sdConf/2, ymax = meanConf + sdConf/2),
width = 0.2,
position = position_dodge(0.9))+
labs(title = "Confidence Score", xlim(0,1.0))
ggplot(data = WHNSummary, aes(x = Block, y = meanMISC, fill = Block))+
geom_col()+
geom_errorbar(aes(ymin = meanMISC - (sdMISC/2), ymax = meanMISC + (sdMISC/2)),
width = 0.2,
position = position_dodge(0.9))+
labs(title = "MISC Score")
MISCDataset <- WHNDataset %>%
group_by(trials_3.thisTrialN, Block) %>%
summarise(mean = mean(MiseryScale.response),
sd = sd(MiseryScale.response))
ggplot(data = MISCDataset, aes(x = trials_3.thisTrialN, y = mean))+
geom_line(aes(colour  = factor(Block)))+
geom_ribbon(aes(ymin =MISCDataset$mean - MISCDataset$sd, ymax = MISCDataset$mean + MISCDataset$sd, fill = Block),alpha= 0.2) +
labs(title = "MISC Score")
ANOVA <- aov(trialResp.corr ~ Block , data = WHNDataset)
summary(ANOVA)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(splitstackshape)
library(stringr)
library(data.table)
library(dplyr)
library(tidyr)
library(gridExtra)
library(lme4)
library(lmerTest)
dataFolder = "C:/Users/thoma/OneDrive - University of Glasgow/Desktop/Study3/data"
file_list <- list.files(path = dataFolder, pattern = "..csv$", all.files = TRUE, full.names = TRUE, recursive = TRUE)
RawWHNDataset <- data.frame()
#loop through all the fills, create a temporary container, remove the first, second and last rows and then add 1 to the trials counter. Then bind it to the dataset
for (file in file_list){
tempData <- read.csv(file, header = T)
RawWHNDataset <- bind_rows(RawWHNDataset, tempData)
}
View(RTOverallSummary)
RawWHNDataset <- data.frame()
#loop through all the fills, create a temporary container, remove the first, second and last rows and then add 1 to the trials counter. Then bind it to the dataset
for (file in file_list){
tempData <- read.csv(file, header = T)
RawWHNDataset <- bind_rows(RawWHNDataset, tempData)
}
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(splitstackshape)
library(stringr)
library(data.table)
library(dplyr)
library(tidyr)
library(gridExtra)
library(lme4)
library(lmerTest)
dataFolder = "C:/Users/thoma/OneDrive - University of Glasgow/Desktop/Study3/data"
file_list <- list.files(path = dataFolder, pattern = "..csv$", all.files = TRUE, full.names = TRUE, recursive = TRUE)
RawWHNDataset <- data.frame()
#loop through all the fills, create a temporary container, remove the first, second and last rows and then add 1 to the trials counter. Then bind it to the dataset
for (file in file_list){
tempData <- read.csv(file, header = T)
RawWHNDataset <- bind_rows(RawWHNDataset, tempData)
}
View(RawWHNDataset)
View(tempData)
View(RawWHNDataset)
View(RawWHNDataset)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(splitstackshape)
library(stringr)
library(data.table)
library(dplyr)
library(tidyr)
library(gridExtra)
library(lme4)
library(lmerTest)
dataFolder = "C:/Users/thoma/OneDrive - University of Glasgow/Desktop/Study3/data"
file_list <- list.files(path = dataFolder, pattern = "..csv$", all.files = TRUE, full.names = TRUE, recursive = TRUE)
RawWHNDataset <- data.frame()
#loop through all the fills, create a temporary container, remove the first, second and last rows and then add 1 to the trials counter. Then bind it to the dataset
for (file in file_list){
tempData <- read.csv(file, header = T)
RawWHNDataset <- bind_rows(RawWHNDataset, tempData)
}
SortedWHNDataset <- RawWHNDataset %>%
select(participant,image_file,Correct,trials_3.thisTrialN, conf_slider.response, conf_slider.rt, MiseryScale.response, Attention_slider.response, trialResp.keys, trialResp.corr)
SortedWHNDataset$Attention_slider.response <- as.numeric(SortedWHNDataset$Attention_slider.response)
Counterbalancing <- read.csv("C:/Users/thoma/OneDrive - University of Glasgow/Desktop/Study3/Study3Counterbalancing.csv", header = T)
Counterbalancing <- Counterbalancing%>%  select(participant, Second, Third, Fourth)
OrderWHNDataset <- left_join(SortedWHNDataset, Counterbalancing, by = 'participant')
OrderWHNDataset$Block <- 'Baseline'
OrderWHNDataset$Block <- if_else(OrderWHNDataset$trials_3.thisTrialN > 29, OrderWHNDataset$Fourth,
if_else(OrderWHNDataset$trials_3.thisTrialN >19, OrderWHNDataset$Third,
if_else(OrderWHNDataset$trials_3.thisTrialN >9, OrderWHNDataset$Second, 'Baseline')))
WHNDataset <- OrderWHNDataset
WHNDataset <- WHNDataset[!is.na(WHNDataset$Correct),]
NoPpts <- n_distinct(WHNDataset$participant)
WHNSummary <- WHNDataset %>%
group_by(Block) %>%
summarise(n = n()/NoPpts,
WHN = sum(trialResp.corr) / NoPpts,
sdWHN = sd(trialResp.corr),
meanConf = mean(conf_slider.response),
sdConf = sd(conf_slider.response),
meanMISC = mean(MiseryScale.response),
sdMISC = sd(MiseryScale.response),
meanAttention = mean(Attention_slider.response),
sdAttention = sd(Attention_slider.response)
)
ggplot(data = WHNSummary, aes(x = Block, y = WHN, fill = Block))+
geom_col()+
geom_errorbar(aes(ymin = WHN - sdWHN, ymax = WHN + sdWHN),
width = 0.2,
position = position_dodge(0.9))+
labs(title = "WHN Score", xlim(0,10))
ggplot(data = WHNSummary, aes(x = Block, y = meanConf, fill = Block))+
geom_col()+
geom_errorbar(aes(ymin = meanConf - sdConf/2, ymax = meanConf + sdConf/2),
width = 0.2,
position = position_dodge(0.9))+
labs(title = "Confidence Score", xlim(0,1.0))
ggplot(data = WHNSummary, aes(x = Block, y = meanMISC, fill = Block))+
geom_col()+
geom_errorbar(aes(ymin = meanMISC - (sdMISC/2), ymax = meanMISC + (sdMISC/2)),
width = 0.2,
position = position_dodge(0.9))+
labs(title = "MISC Score")
MISCDataset <- WHNDataset %>%
group_by(trials_3.thisTrialN, Block) %>%
summarise(mean = mean(MiseryScale.response),
sd = sd(MiseryScale.response))
ggplot(data = MISCDataset, aes(x = trials_3.thisTrialN, y = mean))+
geom_line(aes(colour  = factor(Block)))+
geom_ribbon(aes(ymin =MISCDataset$mean - MISCDataset$sd, ymax = MISCDataset$mean + MISCDataset$sd, fill = Block),alpha= 0.2) +
labs(title = "MISC Score")
ANOVA <- aov(trialResp.corr ~ Block , data = WHNDataset)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(splitstackshape)
library(stringr)
library(data.table)
library(dplyr)
library(tidyr)
library(gridExtra)
library(lme4)
library(lmerTest)
dataFolder = "C:/Users/thoma/OneDrive - University of Glasgow/Desktop/Study3/data"
file_list <- list.files(path = dataFolder, pattern = "..csv$", all.files = TRUE, full.names = TRUE, recursive = TRUE)
RawWHNDataset <- data.frame()
#loop through all the fills, create a temporary container, remove the first, second and last rows and then add 1 to the trials counter. Then bind it to the dataset
for (file in file_list){
tempData <- read.csv(file, header = T)
RawWHNDataset <- bind_rows(RawWHNDataset, tempData)
}
SortedWHNDataset <- RawWHNDataset %>%
select(participant,image_file,Correct,trials_3.thisTrialN, conf_slider.response, conf_slider.rt, MiseryScale.response, Attention_slider.response, trialResp.keys, trialResp.corr)
SortedWHNDataset$Attention_slider.response <- as.numeric(SortedWHNDataset$Attention_slider.response)
Counterbalancing <- read.csv("C:/Users/thoma/OneDrive - University of Glasgow/Desktop/Study3/Study3Counterbalancing.csv", header = T)
Counterbalancing <- Counterbalancing%>%  select(participant, Second, Third, Fourth)
OrderWHNDataset <- left_join(SortedWHNDataset, Counterbalancing, by = 'participant')
OrderWHNDataset$Block <- 'Baseline'
OrderWHNDataset$Block <-  if_else(OrderWHNDataset$trials_3.thisTrialN > 31, OrderWHNDataset$Fifth,
if_else(OrderWHNDataset$trials_3.thisTrialN > 23, OrderWHNDataset$Fourth,
if_else(OrderWHNDataset$trials_3.thisTrialN > 15, OrderWHNDataset$Third,
if_else(OrderWHNDataset$trials_3.thisTrialN > 7, OrderWHNDataset$Second,
'Baseline'))))
View(Counterbalancing)
Counterbalancing <- read.csv("C:/Users/thoma/OneDrive - University of Glasgow/Desktop/Study3/Study3Counterbalancing.csv", header = T)
Counterbalancing <- Counterbalancing%>%  select(participant, Second, Third, Fourth)
Counterbalancing <- read.csv("C:/Users/thoma/OneDrive - University of Glasgow/Desktop/Study3/Study3Counterbalancing.csv", header = T)
Counterbalancing <- Counterbalancing%>%  select(participant, Second, Third, Fourth, Fifth)
OrderWHNDataset <- left_join(SortedWHNDataset, Counterbalancing, by = 'participant')
OrderWHNDataset$Block <- 'Baseline'
OrderWHNDataset$Block <-  if_else(OrderWHNDataset$trials_3.thisTrialN > 31, OrderWHNDataset$Fifth,
if_else(OrderWHNDataset$trials_3.thisTrialN > 23, OrderWHNDataset$Fourth,
if_else(OrderWHNDataset$trials_3.thisTrialN > 15, OrderWHNDataset$Third,
if_else(OrderWHNDataset$trials_3.thisTrialN > 7, OrderWHNDataset$Second,
'Baseline'))))
WHNDataset <- OrderWHNDataset
WHNDataset <- WHNDataset[!is.na(WHNDataset$Correct),]
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(splitstackshape)
library(stringr)
library(data.table)
library(dplyr)
library(tidyr)
library(gridExtra)
library(lme4)
library(lmerTest)
dataFolder = "C:/Users/thoma/OneDrive - University of Glasgow/Desktop/Study3/data"
file_list <- list.files(path = dataFolder, pattern = "..csv$", all.files = TRUE, full.names = TRUE, recursive = TRUE)
RawWHNDataset <- data.frame()
#loop through all the fills, create a temporary container, remove the first, second and last rows and then add 1 to the trials counter. Then bind it to the dataset
for (file in file_list){
tempData <- read.csv(file, header = T)
RawWHNDataset <- bind_rows(RawWHNDataset, tempData)
}
SortedWHNDataset <- RawWHNDataset %>%
select(participant,image_file,Correct,trials_3.thisTrialN, conf_slider.response, conf_slider.rt, MiseryScale.response, Attention_slider.response, trialResp.keys, trialResp.corr)
SortedWHNDataset$Attention_slider.response <- as.numeric(SortedWHNDataset$Attention_slider.response)
Counterbalancing <- read.csv("C:/Users/thoma/OneDrive - University of Glasgow/Desktop/Study3/Study3Counterbalancing.csv", header = T)
Counterbalancing <- Counterbalancing%>%  select(participant, Second, Third, Fourth, Fifth)
OrderWHNDataset <- left_join(SortedWHNDataset, Counterbalancing, by = 'participant')
OrderWHNDataset$Block <- 'Baseline'
OrderWHNDataset$Block <-  if_else(OrderWHNDataset$trials_3.thisTrialN > 31, OrderWHNDataset$Fifth,
if_else(OrderWHNDataset$trials_3.thisTrialN > 23, OrderWHNDataset$Fourth,
if_else(OrderWHNDataset$trials_3.thisTrialN > 15, OrderWHNDataset$Third,
if_else(OrderWHNDataset$trials_3.thisTrialN > 7, OrderWHNDataset$Second,
'Baseline'))))
WHNDataset <- OrderWHNDataset
WHNDataset <- WHNDataset[!is.na(WHNDataset$Correct),]
NoPpts <- n_distinct(WHNDataset$participant)
WHNSummary <- WHNDataset %>%
group_by(Block) %>%
summarise(n = n()/NoPpts,
WHN = sum(trialResp.corr) / NoPpts,
sdWHN = sd(trialResp.corr),
meanConf = mean(conf_slider.response),
sdConf = sd(conf_slider.response),
meanMISC = mean(MiseryScale.response),
sdMISC = sd(MiseryScale.response),
meanAttention = mean(Attention_slider.response),
sdAttention = sd(Attention_slider.response)
)
ggplot(data = WHNSummary, aes(x = Block, y = WHN, fill = Block))+
geom_col()+
geom_errorbar(aes(ymin = WHN - sdWHN, ymax = WHN + sdWHN),
width = 0.2,
position = position_dodge(0.9))+
labs(title = "WHN Score", xlim(0,10))
ggplot(data = WHNSummary, aes(x = Block, y = meanConf, fill = Block))+
geom_col()+
geom_errorbar(aes(ymin = meanConf - sdConf/2, ymax = meanConf + sdConf/2),
width = 0.2,
position = position_dodge(0.9))+
labs(title = "Confidence Score", xlim(0,1.0))
ggplot(data = WHNSummary, aes(x = Block, y = meanMISC, fill = Block))+
geom_col()+
geom_errorbar(aes(ymin = meanMISC - (sdMISC/2), ymax = meanMISC + (sdMISC/2)),
width = 0.2,
position = position_dodge(0.9))+
labs(title = "MISC Score")
MISCDataset <- WHNDataset %>%
group_by(trials_3.thisTrialN, Block) %>%
summarise(mean = mean(MiseryScale.response),
sd = sd(MiseryScale.response))
ggplot(data = MISCDataset, aes(x = trials_3.thisTrialN, y = mean))+
geom_line(aes(colour  = factor(Block)))+
geom_ribbon(aes(ymin =MISCDataset$mean - MISCDataset$sd, ymax = MISCDataset$mean + MISCDataset$sd, fill = Block),alpha= 0.2) +
labs(title = "MISC Score")
ANOVA <- aov(trialResp.corr ~ Block , data = WHNDataset)
