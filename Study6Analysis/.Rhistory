# FixCountChi
FixCountAnova <- aov(data = PptSummaryAOI, NoF ~ Condition)
summary(FixCountAnova)
qqnorm(sqrt(PptSummaryAOI$NoF))
TukeyHSD(FixCountAnova)
PptSummaryAOI$Condition <- factor(PptSummaryAOI$Condition, levels = c("Control", "Visual", "Avatar", "Social"))
PptSummaryAOI$Condition <- relevel(PptSummaryAOI$Condition, ref = "Control")
FixCountLM <- lm(data =PptSummaryAOI, NoF ~ Condition,  family = "poisson")
summary(FixCountLM)
FixCountLMER <- lmer(data =PptSummaryAOI, NoF ~ Condition + (1|Ppt) )
summary(FixCountLMER)
library(report)
FixCountResults <- report(FixCountLMER, CI = 95)
#ef <- as.data.frame(effects("Condition", FixCountResults))
#head(ef)
summary(FixCountResults)
PptSummaryAOI$Condition <- factor(PptSummaryAOI$Condition, levels = c("Control", "Visual", "Avatar", "Social"))
TotalNoFPlot <-ggplot(data = PptSummaryAOI, aes(x = Condition, y = NoF, fill = Condition))+
geom_violin(alpha=0.5)+
geom_boxplot(width = 0.25)+
labs(title = "Mean Number of Overall Fixations", y = "Mean Fixation Count", x = "NDRT Presentation Condition")+
ylim(0,700)+
scale_fill_manual(values = S6_palette) +
theme_classic()+
theme(legend.position="none")
FixCountLM <- lm(data =PptSummaryAOI, NoF ~ Condition,  family = "poisson")
summary(FixCountLM)
FixCountLMER <- lmer(data =PptSummaryAOI, NoF ~ Condition + (1|Ppt))
summary(FixCountLMER)
TotalNoFPlot
ggsave(filename = "S6TotalNoFPlot.png",
plot = TotalNoFPlot)
# ,
# scale = 3,
# device = png,
# width = 3840,
# units = "px",
# dpi = 700)
HazFixCountSummary <- CorrHazardCountData %>%
group_by(Condition, Target = (gazePoint_target_name == "Wall")) %>%
summarise(n = n(),
NumCorr = sum(CorrAOI, na.rm = T),
prop = (NumCorr) / n() * 100) %>%
drop_na(Target)
HazFixCountSummary$Target[HazFixCountSummary$Target == TRUE] <- "Video"
HazFixCountSummary$Target[HazFixCountSummary$Target == FALSE] <- "AR"
HazFixCountSummary$Condition <- factor(HazFixCountSummary$Condition, ordered = FALSE)
HazFixCountSummaryScreen <- HazFixCountSummary %>%
subset(Target == "Video")
HazFixCountSummaryAR <- HazFixCountSummary %>%
subset(Target == "AR")
TTFFSummary <- CorrHazardCountData %>%
group_by(Condition, PIDCond, CorrAOI) %>%
summarise(n = n(),
TTFF = min(TimeStamp)) %>%
group_by(Condition, CorrAOI) %>%
summarise(n = n(),
TTFF = mean(TTFF))
HazFixCountSummaryTotal <- CorrHazardCountData %>%
group_by(Condition) %>%
summarise(n = n())
PptHazFixCountTotal <- CorrHazardCountData %>%
group_by(ID, Condition) %>%
summarise(HazFixCount = n())
PptHazFixCountTotalSummary <- PptHazFixCountTotal %>%
group_by(Condition) %>%
summarise(n = n(),
avgHaz = mean(HazFixCount),
sd = sd(HazFixCount))
HazFixCountChi <- chisq.test(HazardSummaryAOI$n)
HazFixCountChi
NumHazFix <- aov(data = CorrHazardFixCountPpt, NoF ~ Condition )
summary(NumHazFix)
TukeyHSD(NumHazFix)
CorrHazardFixCountPpt$Condition <- as.factor(CorrHazardFixCountPpt$Condition)
CorrHazardFixCountPpt$Ppt <- as.factor(CorrHazardFixCountPpt$Ppt)
CorrHazardFixCountPpt$Condition <- relevel(CorrHazardFixCountPpt$Condition, ref = "Control")
HazFixCountLM <- lm(data =CorrHazardFixCountPpt, NoF ~ Condition, family = "poisson")
summary(HazFixCountLM)
HazFixCountLMER <- lmer(data =CorrHazardFixCountPpt, NoF ~ Condition + (1|Ppt))
summary(HazFixCountLMER)
HazFixCountResults <- report(HazFixCountLM, CI = 95)
summary(HazFixCountResults)
CorrHazFix <- aov(data = CorrHazardFixCountPpt, sumCorr ~ Condition )
summary(CorrHazFix)
TukeyHSD(CorrHazFix)
PptSummaryAOI$Condition <- as.factor(PptSummaryAOI$Condition)
PptSummaryAOI$Condition <- relevel(PptSummaryAOI$Condition, ref = "Control")
# FixCountLM <- lm(data =PptSummaryAOI, NoF ~ Condition, family = "poisson")
# summary(FixCountLM)
NumHazFixLM <- lm( NoF ~ Condition, data = CorrHazardFixCountPpt)
summary(NumHazFixLM)
# CorrHazFixCountChi <- chisq.test(HazardCorrSummary$sumCorr)
#
# CorrHazFixCountChi
CorrHazardFixCountPpt$Condition <- relevel(CorrHazardFixCountPpt$Condition, ref = "Avatar")
CorrHazardFixCountPpt$Condition <- factor(CorrHazardFixCountPpt$Condition, levels = c("Control", "Visual", "Avatar", "Social"))
TotalHazardNoFPlot <- ggplot(data = CorrHazardFixCountPpt, aes(x = Condition, y = NoF, fill = Condition))+
geom_violin(alpha = 0.5)+
geom_boxplot(width = 0.25)+
labs(title = "Mean Number of Fixations \n during the Hazard Window", y = "Mean Fixation Count", x = "NDRT Presentation Condition")+
scale_fill_manual(values = S6_palette) +
ylim(0,100)+
theme_classic()+
theme(legend.position="none",
axis.title.y = element_text(size = 9))
HazFixCountLMER <- lmer(data =CorrHazardFixCountPpt, NoF ~ Condition + (1|Ppt))
summary(HazFixCountLMER)
TotalHazardNoFPlot
ggsave(filename = "S6TotalHazardNoFPlot.png",
plot = TotalHazardNoFPlot)
# ,
# scale = 3,
# device = png,
# width = 3840,
# units = "px",
# dpi = 700)
CorrHazardFixCountPpt$Condition <- factor(CorrHazardFixCountPpt$Condition, levels = c("Control", "Visual", "Avatar", "Social"))
# dpi = 700)
FixCountCorrScreen <- chisq.test(HazFixCountSummaryScreen$NumCorr, y = NULL)
FixCountCorrScreen
CorrHazFixLM <- lm( sumCorr ~ Condition, data = CorrHazardFixCountPpt)
summary(CorrHazFixLM)
CorrHazFixLMER <- lmer(sumCorr ~ Condition + (1|Ppt), data = CorrHazardFixCountPpt)
summary(CorrHazFixLMER)
CorrHazardCountData$Condition <- factor(CorrHazardCountData$Condition, levels = c("Control", "Visual", "Avatar", "Social"))
CorrHazFixPropGLM <- glm(CorrAOI ~ Condition, data = CorrHazardCountData)
summary(CorrHazFixPropGLM)
CorrHazFixPropGLMER <- glmer(CorrAOI ~ Condition + (1|ID) + (1|VideoClip), data = CorrHazardCountData, family = "binomial")
summary(CorrHazFixPropGLMER)
# ggplot(data = CorrHazardFixCountPpt, aes(x = Condition, y = sumCorr, fill = Condition))+
#   geom_col()+
#   ylab("Number of 'Correct' Fixations")+
#   scale_fill_brewer(palette = "BrBG")+
#   theme_classic()
#
# plot(HazFixCountSummaryScreen$NumCorr)
CorrHazardFixCountPpt$Condition <- relevel(CorrHazardFixCountPpt$Condition, ref = "Control")
NumCorrHazFixLMER <- lmer(sumCorr ~ Condition + (1|Ppt), data = CorrHazardFixCountPpt )
summary(NumCorrHazFixLMER)
TotalCorrHazardNoFPlot <- ggplot(data = CorrHazardFixCountPpt, aes(x = Condition, y = sumCorr, fill = Condition))+
geom_violin(alpha = 0.5)+
geom_boxplot(width = 0.25)+
ylim(0,50)+
labs(title = "Mean Number Correct Fixations \n during Hazard Window", y = "Mean Correct Fixations", x = "NDRT Presentation Condition")+
scale_fill_manual(values = S6_palette) +
theme_classic()+
theme(legend.position="none")+
theme(text=element_text(size = 10))+
theme(axis.text=element_text(size=10))
TotalCorrHazardNoFPlot
ggsave(filename = "S6TotalCorrHazardNoFPlot.png",
plot = TotalCorrHazardNoFPlot)
#scale = 3)
# ggplot(data = CorrHazardFixCountPpt, aes(x = Condition, y = sumCorr, fill = Condition))+
#   geom_col()+
#   ylab("Number of 'Correct' Fixations")+
#   scale_fill_brewer(palette = "BrBG")+
#   theme_classic()
#
# plot(HazFixCountSummaryScreen$NumCorr)
#CorrHazardFixCountPpt$Condition <- relevel(CorrHazardFixCountPpt$Condition, ref = "Control")
CorrHazardFixCountPpt$Condition <- factor(CorrHazardFixCountPpt$Condition, levels = c("Control", "Visual", "Avatar", "Social"))
PropCorrHazFixLMER <- lmer(propCorr ~ Condition + (1|Ppt), data = CorrHazardFixCountPpt)
summary(PropCorrHazFixLMER)
PropCorrHazardNoFPlot <- ggplot(data = CorrHazardFixCountPpt, aes(x = Condition, y = propCorr, fill = Condition))+
geom_violin(alpha = 0.5)+
geom_boxplot(width = 0.25)+
ylim(0,90)+
labs(title = "Mean Proportion of Correct Fixations \n during the Hazard Window", y = "Proportion of Correct Fixations", x = "NDRT Presentation Condition")+
scale_fill_manual(values = S6_palette) +
theme_classic()+
theme(legend.position="none")+
theme(text=element_text(size = 10))+
theme(axis.text=element_text(size=10))
PropCorrHazardNoFPlot
ggsave(filename = "S6PropCorrHazardNoFPlot.png",
plot = PropCorrHazardNoFPlot)
#scale = 3)
#AOIARTargets$Condition <- factor(AOIARTargets$Condition, levels = c("Visual", "Avatar", "Social"))
AOIARTargets$Condition <- relevel(AOIARTargets$Condition, ref = "Avatar")
#AOIARTargets$Condition <- factor(AOIARTargets$Condition, levels = c("Visual", "Avatar", "Social"))
#AOIARTargets$Condition <- relevel(AOIARTargets$Condition, ref = "Avatar")
ARFixLMER <- lmer(n ~ Condition + (1|ID), data = AOIARTargets)
summary(ARFixLMER)
ARNoFPlot <- ggplot(data = AOIARTargets, aes(x = Condition, y = n, fill = Condition))+
geom_violin(alpha = 0.5)+
geom_boxplot(width = 0.25)+
# ylim(0,90)+
labs(title = "Mean Number of Fixations on the AR elements", y = "Number of Fixations", x = "NDRT Presentation Condition")+
scale_fill_manual(values = S6_palette) +
theme_classic()+
theme(legend.position="none")+
theme(text=element_text(size = 10))+
theme(axis.text=element_text(size=10))
ARNoFPlot
ggsave(filename = "S6ARNoFPlot.png",
plot = ARNoFPlot)
#scale = 3)
#AOIARTargets$Condition <- factor(AOIARTargets$Condition, levels = c("Visual", "Avatar", "Social"))
AOIARTargets$Condition <- relevel(AOIARTargets$Condition, ref = "Visual")
#AOIARTargets$Condition <- factor(AOIARTargets$Condition, levels = c("Visual", "Avatar", "Social"))
#AOIARTargets$Condition <- relevel(AOIARTargets$Condition, ref = "Visual")
ARFixDurLMER <- lmer(meanDuration ~ Condition + (1|ID), data = AOIARTargets)
summary(ARFixDurLMER)
ARFixDurPlot <- ggplot(data = AOIARTargets, aes(x = Condition, y = meanDuration, fill = Condition))+
geom_violin(alpha = 0.5)+
geom_boxplot(width = 0.25)+
# ylim(0,90)+
labs(title = "Mean Number of Fixations on the AR elements", y = "Number of Fixations", x = "NDRT Presentation Condition")+
scale_fill_manual(values = S6_palette) +
theme_classic()+
theme(legend.position="none")+
theme(text=element_text(size = 10))+
theme(axis.text=element_text(size=10))
ARFixDurPlot
ggsave(filename = "S6ARFixDurPlot.png",
plot = ARFixDurPlot)
#scale = 3)
HazardAOIARTargets$Condition <- factor(HazardAOIARTargets$Condition, levels = c("Visual", "Avatar", "Social"))
HazardAOIARTargets$Condition <- relevel(HazardAOIARTargets$Condition, ref = "Avatar")
HazardARFixLMER <- lmer(n ~ Condition + (1|participant), data = HazardAOIARTargets)
HazardARFixLMER <- lmer(n ~ Condition + (1|ID), data = HazardAOIARTargets)
HazardARFixLMER <- lmer(n ~ Condition + (1|Ppt), data = HazardAOIARTargets)
HazardAOIARTargets
View(HazardAOITargetSummary)
HazardARNoFPlot <- ggplot(data = HazardAOIARTargets, aes(x = Condition, y = n, fill = Condition))+
geom_violin(alpha = 0.5)+
geom_boxplot(width = 0.25)+
# ylim(0,90)+
labs(title = "Mean Number of Fixations on the AR elements", y = "Number of Fixations", x = "NDRT Presentation Condition")+
scale_fill_manual(values = S6_palette) +
theme_classic()+
theme(legend.position="none")+
theme(text=element_text(size = 10))+
theme(axis.text=element_text(size=10))
HazardARNoFPlot <- ggplot(data = HazardAOIARTargets, aes(x = Condition, y = n, fill = Condition))+
geom_violin(alpha = 0.5)+
geom_boxplot(width = 0.25)+
# ylim(0,90)+
labs(title = "Mean Number of Fixations on the AR elements", y = "Number of Fixations", x = "NDRT Presentation Condition")+
scale_fill_manual(values = S6_palette) +
theme_classic()+
theme(legend.position="none")+
theme(text=element_text(size = 10))+
theme(axis.text=element_text(size=10))
HazardARNoFPlot
#AOIARTargets$Condition <- factor(AOIARTargets$Condition, levels = c("Visual", "Avatar", "Social"))
AOIARTargets$Condition <- relevel(AOIARTargets$Condition, ref = "Visual")
#AOIARTargets$Condition <- factor(AOIARTargets$Condition, levels = c("Visual", "Avatar", "Social"))
#AOIARTargets$Condition <- relevel(AOIARTargets$Condition, ref = "Visual")
ARFixDurLMER <- lmer(meanDuration ~ Condition + (1|ID), data = AOIARTargets)
summary(ARFixDurLMER)
ARFixDurPlot <- ggplot(data = AOIARTargets, aes(x = Condition, y = meanDuration, fill = Condition))+
geom_violin(alpha = 0.5)+
geom_boxplot(width = 0.25)+
# ylim(0,90)+
labs(title = "Mean Number of Fixations on the AR elements", y = "Number of Fixations", x = "NDRT Presentation Condition")+
scale_fill_manual(values = S6_palette) +
theme_classic()+
theme(legend.position="none")+
theme(text=element_text(size = 10))+
theme(axis.text=element_text(size=10))
ARFixDurPlot
ggsave(filename = "S6ARFixDurPlot.png",
plot = ARFixDurPlot)
#scale = 3)
library(cowplot)
legend_b <- get_legend(
TotalNoFPlot +
guides(color = guide_legend(nrow = 1)) +
theme(legend.position = "bottom")
)
AllTotalNoF <- plot_grid(TotalNoFPlot, TotalHazardNoFPlot,labels = c('a)','b)'),ncol = 2)
AllTotalNoFLeg <- plot_grid(AllTotalNoF, legend_b,ncol = 1, rel_heights = c(1, .1))
AllTotalNoFLeg
ggsave(filename = "AllTotalNoFLeg.jpg",
plot = AllTotalNoFLeg,
width = 3840,
units = "px")
CorrHazardFixCountPpt$Condition <- as.factor(CorrHazardFixCountPpt$Condition)
#CorrHazardFixCountPpt$Condition <- relevel(PptSummaryAOI$Condition, ref = "Control")
CorrHazFixCountLM <- lm(data =CorrHazardFixCountPpt, sumCorr ~ Condition, family = "poisson")
summary(CorrHazFixCountLM)
CorrHazardFixCountPpt$PIDCond <- as.factor(CorrHazardFixCountPpt$PIDCond)
CorrHazFixLMER <- lmer(sumCorr ~ Condition + (1|Ppt), data = CorrHazardFixCountPpt)
summary(CorrHazFixLMER)
CorrHazFixCountResults <- report(CorrHazFixLMER, CI = 95)
summary(CorrHazFixCountResults)
hist(CountData$eventDuration)
shapiro.test(CountData$eventDuration[0:5000])
#ad.hoc.test(FinalValidAOIETDataRMOut$eventDuration)
qqnorm(sqrt(CountData$eventDuration))
ggplot(CountData, aes(x = eventDuration, fill = Condition)) + geom_density(alpha = .3)
library(ggpubr)
bxp <- ggboxplot(CountData, x = "Condition", y = "eventDuration")
bxp
summary(lm(eventDuration ~ Condition, data = CountData))
BasicDwellAOV <- summary(aov(eventDuration ~ Condition, data = CountData))
#BasicDwellAOVPW <- pairwise.t.test()
#DwellModel <- glmer(eventDuration ~ Condition + (1|ID), data = FinalValidAOIETDataRMOut, family = poisson)
bxpRMOut <- ggboxplot(CountData, x = "Condition", y = "eventDuration")
bxpRMOut
ggplot(CountData, aes(x = Condition, y = eventDuration, fill = Condition))+
geom_violin()+
geom_boxplot(alpha = 0, width = 0.18)+
ylab("Fixation Duration (ms)")+
theme_classic()+
scale_fill_brewer(palette = "BrBG")
a1 <- aov(eventDuration ~ Condition, data = CountData)
summary(a1)
Tukeya1 <- TukeyHSD(a1)
Tukeya1
a2 <- aov(meanDuration ~ Condition, data = PptSummaryAOI)
summary(a2)
Tukeya2 <- TukeyHSD(a2)
Tukeya2
ggplot(FinalValidAOIETDataRMOut, aes(x = Condition, y = eventDuration, fill = Condition))+
geom_violin()+
geom_boxplot(alpha = 0, width = 0.18)+
ylab("Fixation Duration (ms)")+
theme_classic()+
scale_fill_brewer(palette = "BrBG")
ggplot(CountData, aes(x = Condition, y = eventDuration, fill = Condition))+
geom_violin()+
geom_boxplot(alpha = 0, width = 0.18)+
ylab("Fixation Duration (ms)")+
theme_classic()+
scale_fill_brewer(palette = "BrBG")
ggplot(PptSummaryAOI, aes(x = Condition, y = meanDuration, fill = Condition))+
geom_violin()+
geom_boxplot(alpha = 0, width = 0.18)+
ylab("Fixation Duration (ms)")+
theme_classic()+
scale_fill_brewer(palette = "BrBG")
FinalValidAOIETDataRMOut$Condition <- as.factor(FinalValidAOIETDataRMOut$Condition)
DurModelNull <- lmer(eventDuration ~ (1|ID), data = FinalValidAOIETDataRMOut)
DurModelBasic <- lmer(data = FinalValidAOIETDataRMOut, formula = eventDuration ~ Condition + (1|ID))
summary(DurModelBasic)
#
# DurModel1 <- lmer(data = FinalValidAOIETDataRMOut,  formula = eventDuration ~ Condition + (1|ID) + (1|VideoClip))
# summary(DurModel1)
#
# DurModel2 <- lmer(data = FinalValidAOIETDataRMOut,  formula = eventDuration ~ Condition + (1|ID) + (1|VideoClip) + (1|gazePointAOI_name))
# summary(DurModel2)
#
# DurModel3 <- lmer(data = FinalValidAOIETDataRMOut,  formula = eventDuration ~ Condition + (1|ID) + (1|VideoClip) + (1|gazePoint_target_name) + (1|gazePointAOI_name))
# summary(DurModel3)
#
# FinalValidAOIETDataRMOut$Condition <- relevel(FinalValidAOIETDataRMOut$Condition, ref = "Control")
#
# anova(DurModelNull, DurModelBasic, DurModel1, DurModel2,DurModel3)
library(cowplot)
legend_b <- get_legend(
TotalHazardNoFPlot +
guides(color = guide_legend(nrow = 1)) +
theme(legend.position = "bottom")
)
AllCorrHaz<- plot_grid(TotalCorrHazardNoFPlot, PropCorrHazardNoFPlot, labels = c('a)','b)'),ncol = 2)
AllCorrHazLeg <- plot_grid(AllCorrHaz, legend_b,ncol = 1, rel_heights = c(1.5, .1))
AllCorrHazLeg
ggsave(filename = "AllCorrHazLeg.jpg",
plot = AllCorrHazLeg,
units = "px")
CountData$Condition <- as.factor(CountData$Condition)
DurModelNull <- lmer(eventDuration ~ (1|ID), data = CountData)
DurModelBasic <- lmer(data = CountData, formula = eventDuration ~ Condition + (1|ID))
summary(DurModelBasic)
# DurModel1 <- lmer(data = CountData,  formula = eventDuration ~ Condition + (1|ID) + (1|VideoClip))
# summary(DurModel1)
#
# DurModel2 <- lmer(data = CountData,  formula = eventDuration ~ Condition + (1|ID) + (1|VideoClip) + (1|gazePointAOI_name))
# summary(DurModel2)
#
# DurModel3 <- lmer(data = CountData,  formula = eventDuration ~ Condition + (1|ID) + (1|VideoClip) + (1|gazePoint_target_name) + (1|gazePointAOI_name))
# summary(DurModel3)
#
# DurModel4 <- lmer(data = CountData,  formula = eventDuration ~ Condition + (1|ID) + (1|VideoClip) + (1|gazePoint_target_name) + (1|gazePointAOI_name) + (1|TimeStamp))
# summary(DurModel4)
#
# CountData$Condition <- relevel(CountData$Condition, ref = "Control")
#
# anova(DurModelNull, DurModelBasic, DurModel1, DurModel2,DurModel3, DurModel4)
PptSummaryAOI$Condition <- as.factor(PptSummaryAOI$Condition)
DurModelNull <- lmer(meanDuration ~ (1|Ppt), data = PptSummaryAOI)
DurModelBasic <- lm(data = PptSummaryAOI, formula = meanDuration ~ Condition, family = "poisson")
#DurModelBasic <- lmer(data = PptSummaryAOI, formula = meanDuration ~ Condition + (1|Ppt))
summary(DurModelBasic)
qqnorm(sqrt(PptSummaryAOI$meanDuration))
PptSummaryAOI$Condition <- relevel(PptSummaryAOI$Condition, ref = "Control")
#anova(DurModelNull, DurModelBasic, DurModel1, DurModel2,DurModel3, DurModel4)
DurModelBasicLMER <- lmer(data = PptSummaryAOI, formula = meanDuration ~ Condition + (1|Ppt))
DurModelResults <- report(DurModelBasicLMER, CI = 95)
summary(DurModelResults)
PptSummaryAOI$Condition <- relevel(PptSummaryAOI$Condition, ref = "Control")
DurModelBasicLMER <- lmer(data = PptSummaryAOI, formula = meanDuration ~ Condition + (1|Ppt))
summary(DurModelBasicLMER)
TotalFixDurPlot <- ggplot(data = PptSummaryAOI, aes(x = Condition, y = meanDuration, fill = Condition))+
geom_violin(alpha = 0.5)+
geom_boxplot(width = 0.2)+
labs(title = "Mean Overall Fixation Duration", y = "Mean Fixation Duration", x = "NDRT Presentation Condition")+
scale_fill_manual(values = S6_palette) +
ylim(0,2500)+
theme_classic()+
theme(legend.position="none")
TotalFixDurPlot
ggsave(filename = "S6TotalFixDurPlot.jpg",
plot = TotalFixDurPlot)
# ,
# scale = 3,
# device = png,
# width = 3840,
# units = "px",
# dpi = 700)
ggplot(FinalValidHazardAOIETDataRMOut, aes(x = Condition, y = eventDuration, fill = Condition))+
geom_violin()+
geom_boxplot(alpha = 0, width = 0.18)+
ylab("Fixation Duration in Hazard Window")+
theme_classic()
TTFF$Condition <- TTFF$Condition.x
TTFF$Condition <- as.factor(TTFF$Condition)
TTFFWall$Condition <- TTFFWall$Condition.x
TTFFWall$Condition <- as.factor(TTFFWall$Condition)
TTFF$Condition <- relevel(TTFF$Condition, ref = "Control")
#TTFFWall$Condition <- relevel(TTFFWall$Condition, ref = "Visual")
#TTFFANOVA <- aov(FirstFixationTime ~ Condition, data = TTFF)
#summary(TTFFANOVA)
# TTFFModelNull <- lmer(FirstFixationTime ~ (1|Participant), data = TTFF)
#
# TTFFModelBasic <- lmer(data = TTFF, formula = FirstFixationTime ~ Condition + (1|Participant))
# summary(TTFFModelBasic)
#
# TTFFModel1 <- lmer(data = TTFF,  formula = FirstFixationTime ~ Condition + (1|Participant) + (1|VideoClip))
# summary(TTFFModel1)
#
# TTFFModel2 <- lmer(data = TTFF,  formula = FirstFixationTime ~ Condition + (1|Participant) + (1|VideoClip) + (1|gazePointAOI_name))
# summary(TTFFModel2)
#
# TTFFModel3 <- lmer(data = TTFF,  formula = FirstFixationTime ~ Condition + (1|Participant) + (1|VideoClip) + (1|gazePoint_target_name) + (1|gazePointAOI_name))
# summary(TTFFModel3)
#
# anova(TTFFModelNull,TTFFModelBasic,TTFFModel1,TTFFModel2,TTFFModel3)
TTFFModelBasic <- lm(data = TTFF, formula = eventDuration ~ Condition)
summary(TTFFModelBasic)
TTFFWallModelBasic <- lm(data = TTFFWall, formula = eventDuration ~ Condition.x)
#DurModelBasic <- lmer(data = PptSummaryAOI, formula = meanDuration ~ Condition + (1|Ppt))
summary(TTFFWallModelBasic)
PptSummaryAOI$Condition <- relevel(PptSummaryAOI$Condition, ref = "Control")
TTFF$Condition <- relevel(TTFF$Condition, ref = "Control")
TTFFModelBasic <- lm(data = TTFF, formula = FirstFixationTime ~ Condition)
summary(TTFFModelBasic)
TTFFPlot <- ggplot(TTFF, aes(x = Condition, y = FirstFixationTime, fill = Condition))+
geom_violin(alpha = 0.5)+
geom_boxplot(width = 0.25)+
ylim(0,6)+
labs(title = "Mean Time to First Fixation", y = "Mean Time to First Fixation", x = "NDRT Presentation Condition")+
scale_fill_manual(values = S6_palette) +
theme_classic()
TTFFPlot
ggsave(filename = "S6TTFFPlot.png",
plot = TTFFPlot)
CorrHazardCountData$Condition <- as.factor(CorrHazardCountData$Condition)
CorrHazardCountData$Condition <- relevel(CorrHazardCountData$Condition, ref = "Control")
HazDurModelNull <- lmer(eventDuration ~ (1|ID), data = CorrHazardCountData)
HazDurModelBasic <- lmer(data = CorrHazardCountData, formula = eventDuration ~ Condition + (1|ID))
summary(HazDurModelBasic)
# HazDurModel1 <- lmer(data = CorrHazardCountData,  formula = eventDuration ~ Condition + (1|ID) + (1|VideoClip))
# summary(HazDurModel1)
#
# HazDurModel2 <- lmer(data = CorrHazardCountData,  formula = eventDuration ~ Condition + (1|ID) + (1|VideoClip) + (1|gazePointAOI_name))
# summary(HazDurModel2)
#
# HazDurModel3 <- lmer(data = CorrHazardCountData,  formula = eventDuration ~ Condition + (1|ID)  + (1|gazePointAOI_name))
# summary(HazDurModel3)
#anova(HazDurModelNull, HazDurModelBasic, HazDurModel1, HazDurModel2, HazDurModel3)
CorrHazardFixCountPpt$Condition <- as.factor(CorrHazardFixCountPpt$Condition)
CorrHazardFixCountPpt$Condition <- relevel(CorrHazardFixCountPpt$Condition, ref = "Control")
#CorrHazardFixCountPpt$Condition <- relevel(CorrHazardFixCountPpt$Condition, ref = "Cue")
FixDurModelBasic <- lmer(data = PptSummaryAOI, formula = meanDuration ~ Condition + (1|Ppt))
summary(FixDurModelBasic)
HazDurModelBasic <- lmer(data = CorrHazardFixCountPpt, formula = meanDuration ~ Condition + (1|Ppt))
summary(HazDurModelBasic)
HazFixDurResults <- report(HazDurModelBasic, CI = 95)
summary(HazFixDurResults)
CorrHazardFixCountPpt$Condition <- relevel(CorrHazardFixCountPpt$Condition, ref = "Control")
HazDurModelBasic <- lmer(data = CorrHazardFixCountPpt, formula = meanDuration ~ Condition + (1|Ppt))
summary(HazDurModelBasic)
TotalHazFixDurPlot <- ggplot(data = CorrHazardFixCountPpt, aes(x = Condition, y = meanDuration, fill = Condition))+
geom_violin(alpha = 0.5)+
geom_boxplot(width = 0.15)+
labs(title = "Mean overall Fixation Duration \n during the Hazard Window", y = "Mean Hazard Window Fixation Duration", x = "NDRT Presentation Condition")+
ylim(0,4500)+
scale_fill_manual(values = S6_palette) +
theme_classic()+
theme(legend.position="none")
TotalHazFixDurPlot
ggsave(filename = "S6TotalHazFixDurPlot.jpg",
plot = TotalHazFixDurPlot)
legend_c <- get_legend(
TotalFixDurPlot +
guides(color = guide_legend(nrow = 1)) +
theme(legend.position = "bottom")
)
AllFixDur <- plot_grid(TotalFixDurPlot, TotalHazFixDurPlot,labels = c('a)','b)'),ncol = 2)
AllFixDurLeg <- plot_grid(AllFixDur, legend_b,ncol = 1, rel_heights = c(1, .1))
AllFixDurLeg
ggsave(filename = "AllFixDurLeg.jpg",
plot = AllFixDurLeg,
width = 3840,
units = "px")
beep()
print(Sys.time())
